{
    "canonicalName": "Cloud Search",
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/cloud_search": {
                    "description": "Index and serve your organization's data with Cloud Search"
                },
                "https://www.googleapis.com/auth/cloud_search.query": {
                    "description": "Search your organization's data in the Cloud Search index"
                },
                "https://www.googleapis.com/auth/cloud_search.settings": {
                    "description": "New Service: https://www.googleapis.com/auth/cloud_search.settings"
                },
                "https://www.googleapis.com/auth/cloud_search.debug": {
                    "description": "New Service: https://www.googleapis.com/auth/cloud_search.debug"
                },
                "https://www.googleapis.com/auth/cloud_search.indexing": {
                    "description": "New Service: https://www.googleapis.com/auth/cloud_search.indexing"
                },
                "https://www.googleapis.com/auth/cloud_search.settings.indexing": {
                    "description": "New Service: https://www.googleapis.com/auth/cloud_search.settings.indexing"
                },
                "https://www.googleapis.com/auth/cloud_search.stats.indexing": {
                    "description": "New Service: https://www.googleapis.com/auth/cloud_search.stats.indexing"
                },
                "https://www.googleapis.com/auth/cloud_search.stats": {
                    "description": "New Service: https://www.googleapis.com/auth/cloud_search.stats"
                },
                "https://www.googleapis.com/auth/cloud_search.settings.query": {
                    "description": "New Service: https://www.googleapis.com/auth/cloud_search.settings.query"
                }
            }
        }
    },
    "rootUrl": "https://cloudsearch.googleapis.com/",
    "ownerDomain": "google.com",
    "name": "cloudsearch",
    "batchPath": "batch",
    "fullyEncodeReservedExpansion": true,
    "title": "Cloud Search API",
    "ownerName": "Google",
    "resources": {
        "media": {
            "methods": {
                "upload": {
                    "parameters": {
                        "resourceName": {
                            "required": true,
                            "type": "string",
                            "pattern": "^.+$",
                            "location": "path",
                            "description": "Name of the media that is being downloaded.  See\nReadRequest.resource_name."
                        }
                    },
                    "flatPath": "v1/media/{mediaId}",
                    "path": "v1/media/{+resourceName}",
                    "request": {
                        "$ref": "Media"
                    },
                    "description": "Uploads media for indexing.\n\nThe upload endpoint supports direct and resumable upload protocols and\nis intended for large items that can not be inlined during index requests. To\nindex large content:\n\n1. Call upload to begin\n   a session and get the item reference.\n1. Upload the content using the item reference's resource name.\n1. Call index with the item\n   reference as the content.\n\nFor additional information, see\n[Create a content connector using the REST API](https://developers.google.com/cloud-search/docs/guides/content-connector#rest).",
                    "supportsMediaUpload": true,
                    "response": {
                        "$ref": "Media"
                    },
                    "parameterOrder": [
                        "resourceName"
                    ],
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud_search",
                        "https://www.googleapis.com/auth/cloud_search.indexing"
                    ],
                    "mediaUpload": {
                        "protocols": {
                            "simple": {
                                "multipart": true,
                                "path": "/upload/v1/media/{+resourceName}"
                            }
                        },
                        "accept": [
                            "*/*"
                        ]
                    },
                    "id": "cloudsearch.media.upload"
                }
            }
        },
        "stats": {
            "resources": {
                "index": {
                    "resources": {
                        "datasources": {
                            "methods": {
                                "get": {
                                    "response": {
                                        "$ref": "GetDataSourceIndexStatsResponse"
                                    },
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "httpMethod": "GET",
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud_search",
                                        "https://www.googleapis.com/auth/cloud_search.stats",
                                        "https://www.googleapis.com/auth/cloud_search.stats.indexing"
                                    ],
                                    "parameters": {
                                        "toDate.year": {
                                            "description": "Year of date. Must be from 1 to 9999.",
                                            "format": "int32",
                                            "type": "integer",
                                            "location": "query"
                                        },
                                        "fromDate.month": {
                                            "location": "query",
                                            "description": "Month of date. Must be from 1 to 12.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "fromDate.day": {
                                            "type": "integer",
                                            "location": "query",
                                            "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                                            "format": "int32"
                                        },
                                        "fromDate.year": {
                                            "description": "Year of date. Must be from 1 to 9999.",
                                            "format": "int32",
                                            "type": "integer",
                                            "location": "query"
                                        },
                                        "toDate.day": {
                                            "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                                            "format": "int32",
                                            "type": "integer",
                                            "location": "query"
                                        },
                                        "name": {
                                            "description": "The resource id of the data source to retrieve statistics for,\nin the following format: \"datasources/{source_id}\"",
                                            "required": true,
                                            "type": "string",
                                            "pattern": "^datasources/[^/]+$",
                                            "location": "path"
                                        },
                                        "toDate.month": {
                                            "location": "query",
                                            "description": "Month of date. Must be from 1 to 12.",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "flatPath": "v1/stats/index/datasources/{datasourcesId}",
                                    "path": "v1/stats/index/{+name}",
                                    "id": "cloudsearch.stats.index.datasources.get",
                                    "description": "Gets indexed item statistics for a single data source."
                                }
                            }
                        }
                    }
                }
            },
            "methods": {
                "getIndex": {
                    "description": "Gets indexed item statistics aggreggated across all data sources.",
                    "response": {
                        "$ref": "GetCustomerIndexStatsResponse"
                    },
                    "parameterOrder": [],
                    "httpMethod": "GET",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud_search",
                        "https://www.googleapis.com/auth/cloud_search.stats",
                        "https://www.googleapis.com/auth/cloud_search.stats.indexing"
                    ],
                    "parameters": {
                        "fromDate.year": {
                            "location": "query",
                            "description": "Year of date. Must be from 1 to 9999.",
                            "format": "int32",
                            "type": "integer"
                        },
                        "toDate.day": {
                            "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                            "format": "int32",
                            "type": "integer",
                            "location": "query"
                        },
                        "toDate.month": {
                            "location": "query",
                            "description": "Month of date. Must be from 1 to 12.",
                            "format": "int32",
                            "type": "integer"
                        },
                        "toDate.year": {
                            "location": "query",
                            "description": "Year of date. Must be from 1 to 9999.",
                            "format": "int32",
                            "type": "integer"
                        },
                        "fromDate.month": {
                            "location": "query",
                            "description": "Month of date. Must be from 1 to 12.",
                            "format": "int32",
                            "type": "integer"
                        },
                        "fromDate.day": {
                            "location": "query",
                            "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "flatPath": "v1/stats/index",
                    "path": "v1/stats/index",
                    "id": "cloudsearch.stats.getIndex"
                }
            }
        },
        "settings": {
            "resources": {
                "searchapplications": {
                    "methods": {
                        "delete": {
                            "httpMethod": "DELETE",
                            "response": {
                                "$ref": "Operation"
                            },
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "pattern": "^searchapplications/[^/]+$",
                                    "location": "path",
                                    "description": "The name of the search application to be deleted.\n<br />Format: applications/{application_id}.",
                                    "required": true,
                                    "type": "string"
                                },
                                "debugOptions.enableDebugging": {
                                    "type": "boolean",
                                    "location": "query",
                                    "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging."
                                }
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud_search",
                                "https://www.googleapis.com/auth/cloud_search.settings",
                                "https://www.googleapis.com/auth/cloud_search.settings.query"
                            ],
                            "flatPath": "v1/settings/searchapplications/{searchapplicationsId}",
                            "id": "cloudsearch.settings.searchapplications.delete",
                            "path": "v1/settings/{+name}",
                            "description": "Deletes a search application."
                        },
                        "reset": {
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud_search",
                                "https://www.googleapis.com/auth/cloud_search.settings",
                                "https://www.googleapis.com/auth/cloud_search.settings.query"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "The name of the search application to be reset.\n<br />Format: applications/{application_id}.",
                                    "required": true,
                                    "type": "string",
                                    "pattern": "^searchapplications/[^/]+$",
                                    "location": "path"
                                }
                            },
                            "flatPath": "v1/settings/searchapplications/{searchapplicationsId}:reset",
                            "path": "v1/settings/{+name}:reset",
                            "id": "cloudsearch.settings.searchapplications.reset",
                            "request": {
                                "$ref": "ResetSearchApplicationRequest"
                            },
                            "description": "Resets a search application to default settings. This will return an empty\nresponse.",
                            "response": {
                                "$ref": "Operation"
                            },
                            "parameterOrder": [
                                "name"
                            ],
                            "httpMethod": "POST"
                        },
                        "list": {
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud_search",
                                "https://www.googleapis.com/auth/cloud_search.settings",
                                "https://www.googleapis.com/auth/cloud_search.settings.query"
                            ],
                            "parameters": {
                                "debugOptions.enableDebugging": {
                                    "type": "boolean",
                                    "location": "query",
                                    "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging."
                                },
                                "pageToken": {
                                    "description": "The next_page_token value returned from a previous List request, if any.\n<br/> The default value is 10",
                                    "type": "string",
                                    "location": "query"
                                },
                                "pageSize": {
                                    "description": "The maximum number of items to return.",
                                    "format": "int32",
                                    "type": "integer",
                                    "location": "query"
                                }
                            },
                            "flatPath": "v1/settings/searchapplications",
                            "path": "v1/settings/searchapplications",
                            "id": "cloudsearch.settings.searchapplications.list",
                            "description": "Lists all search applications.",
                            "response": {
                                "$ref": "ListSearchApplicationsResponse"
                            },
                            "parameterOrder": [],
                            "httpMethod": "GET"
                        },
                        "create": {
                            "request": {
                                "$ref": "SearchApplication"
                            },
                            "description": "Creates a search application.",
                            "response": {
                                "$ref": "Operation"
                            },
                            "parameterOrder": [],
                            "httpMethod": "POST",
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud_search",
                                "https://www.googleapis.com/auth/cloud_search.settings",
                                "https://www.googleapis.com/auth/cloud_search.settings.query"
                            ],
                            "parameters": {},
                            "flatPath": "v1/settings/searchapplications",
                            "path": "v1/settings/searchapplications",
                            "id": "cloudsearch.settings.searchapplications.create"
                        },
                        "get": {
                            "response": {
                                "$ref": "SearchApplication"
                            },
                            "parameterOrder": [
                                "name"
                            ],
                            "httpMethod": "GET",
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud_search",
                                "https://www.googleapis.com/auth/cloud_search.settings",
                                "https://www.googleapis.com/auth/cloud_search.settings.query"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Name of the search application.\n<br />Format: applications/{application_id}.",
                                    "required": true,
                                    "type": "string",
                                    "pattern": "^searchapplications/[^/]+$",
                                    "location": "path"
                                },
                                "debugOptions.enableDebugging": {
                                    "location": "query",
                                    "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging.",
                                    "type": "boolean"
                                }
                            },
                            "flatPath": "v1/settings/searchapplications/{searchapplicationsId}",
                            "path": "v1/settings/{+name}",
                            "id": "cloudsearch.settings.searchapplications.get",
                            "description": "Gets the specified search application."
                        },
                        "update": {
                            "response": {
                                "$ref": "Operation"
                            },
                            "parameterOrder": [
                                "name"
                            ],
                            "httpMethod": "PUT",
                            "parameters": {
                                "name": {
                                    "location": "path",
                                    "description": "Name of the Search Application.\n<br />Format: searchapplications/{application_id}.",
                                    "required": true,
                                    "type": "string",
                                    "pattern": "^searchapplications/[^/]+$"
                                }
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud_search",
                                "https://www.googleapis.com/auth/cloud_search.settings",
                                "https://www.googleapis.com/auth/cloud_search.settings.query"
                            ],
                            "flatPath": "v1/settings/searchapplications/{searchapplicationsId}",
                            "path": "v1/settings/{+name}",
                            "id": "cloudsearch.settings.searchapplications.update",
                            "description": "Updates a search application.",
                            "request": {
                                "$ref": "SearchApplication"
                            }
                        }
                    }
                },
                "datasources": {
                    "methods": {
                        "delete": {
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud_search",
                                "https://www.googleapis.com/auth/cloud_search.settings",
                                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
                            ],
                            "parameters": {
                                "name": {
                                    "pattern": "^datasources/[^/]+$",
                                    "location": "path",
                                    "description": "Name of the data source.\nFormat: datasources/{source_id}.",
                                    "required": true,
                                    "type": "string"
                                },
                                "debugOptions.enableDebugging": {
                                    "location": "query",
                                    "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging.",
                                    "type": "boolean"
                                }
                            },
                            "flatPath": "v1/settings/datasources/{datasourcesId}",
                            "path": "v1/settings/{+name}",
                            "id": "cloudsearch.settings.datasources.delete",
                            "description": "Deletes a data source.",
                            "response": {
                                "$ref": "Operation"
                            },
                            "parameterOrder": [
                                "name"
                            ],
                            "httpMethod": "DELETE"
                        },
                        "get": {
                            "description": "Gets a data source.",
                            "httpMethod": "GET",
                            "response": {
                                "$ref": "DataSource"
                            },
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Name of the data source resource.\nFormat: datasources/{source_id}.",
                                    "required": true,
                                    "type": "string",
                                    "pattern": "^datasources/[^/]+$",
                                    "location": "path"
                                },
                                "debugOptions.enableDebugging": {
                                    "location": "query",
                                    "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging.",
                                    "type": "boolean"
                                }
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud_search",
                                "https://www.googleapis.com/auth/cloud_search.settings",
                                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
                            ],
                            "flatPath": "v1/settings/datasources/{datasourcesId}",
                            "id": "cloudsearch.settings.datasources.get",
                            "path": "v1/settings/{+name}"
                        },
                        "list": {
                            "description": "Lists data sources.",
                            "response": {
                                "$ref": "ListDataSourceResponse"
                            },
                            "parameterOrder": [],
                            "httpMethod": "GET",
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud_search",
                                "https://www.googleapis.com/auth/cloud_search.settings",
                                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
                            ],
                            "parameters": {
                                "pageToken": {
                                    "location": "query",
                                    "description": "Starting index of the results.",
                                    "type": "string"
                                },
                                "pageSize": {
                                    "description": "Maximum number of data sources to fetch in a request.\nThe max value is 100.\n<br />The default value is 10",
                                    "format": "int32",
                                    "type": "integer",
                                    "location": "query"
                                },
                                "debugOptions.enableDebugging": {
                                    "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging.",
                                    "type": "boolean",
                                    "location": "query"
                                }
                            },
                            "flatPath": "v1/settings/datasources",
                            "path": "v1/settings/datasources",
                            "id": "cloudsearch.settings.datasources.list"
                        },
                        "update": {
                            "httpMethod": "PUT",
                            "parameterOrder": [
                                "name"
                            ],
                            "response": {
                                "$ref": "Operation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud_search",
                                "https://www.googleapis.com/auth/cloud_search.settings",
                                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
                            ],
                            "parameters": {
                                "name": {
                                    "location": "path",
                                    "description": "Name of the data source resource.\nFormat: datasources/{source_id}.\n<br />The name is ignored when creating a data source.",
                                    "required": true,
                                    "type": "string",
                                    "pattern": "^datasources/[^/]+$"
                                }
                            },
                            "flatPath": "v1/settings/datasources/{datasourcesId}",
                            "id": "cloudsearch.settings.datasources.update",
                            "path": "v1/settings/{+name}",
                            "request": {
                                "$ref": "UpdateDataSourceRequest"
                            },
                            "description": "Updates a data source."
                        },
                        "create": {
                            "description": "Creates data source.",
                            "request": {
                                "$ref": "DataSource"
                            },
                            "response": {
                                "$ref": "Operation"
                            },
                            "parameterOrder": [],
                            "httpMethod": "POST",
                            "parameters": {},
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud_search",
                                "https://www.googleapis.com/auth/cloud_search.settings",
                                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
                            ],
                            "flatPath": "v1/settings/datasources",
                            "path": "v1/settings/datasources",
                            "id": "cloudsearch.settings.datasources.create"
                        }
                    }
                }
            }
        },
        "indexing": {
            "resources": {
                "datasources": {
                    "methods": {
                        "getSchema": {
                            "response": {
                                "$ref": "Schema"
                            },
                            "parameterOrder": [
                                "name"
                            ],
                            "httpMethod": "GET",
                            "parameters": {
                                "debugOptions.enableDebugging": {
                                    "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging.",
                                    "type": "boolean",
                                    "location": "query"
                                },
                                "name": {
                                    "location": "path",
                                    "description": "Name of the data source to get Schema.  Format:\ndatasources/{source_id}",
                                    "required": true,
                                    "type": "string",
                                    "pattern": "^datasources/[^/]+$"
                                }
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud_search",
                                "https://www.googleapis.com/auth/cloud_search.settings",
                                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
                            ],
                            "flatPath": "v1/indexing/datasources/{datasourcesId}/schema",
                            "path": "v1/indexing/{+name}/schema",
                            "id": "cloudsearch.indexing.datasources.getSchema",
                            "description": "Gets the schema of a data source."
                        },
                        "updateSchema": {
                            "response": {
                                "$ref": "Operation"
                            },
                            "parameterOrder": [
                                "name"
                            ],
                            "httpMethod": "PUT",
                            "parameters": {
                                "name": {
                                    "required": true,
                                    "type": "string",
                                    "pattern": "^datasources/[^/]+$",
                                    "location": "path",
                                    "description": "Name of the data source to update Schema.  Format:\ndatasources/{source_id}"
                                }
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud_search",
                                "https://www.googleapis.com/auth/cloud_search.settings",
                                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
                            ],
                            "flatPath": "v1/indexing/datasources/{datasourcesId}/schema",
                            "path": "v1/indexing/{+name}/schema",
                            "id": "cloudsearch.indexing.datasources.updateSchema",
                            "description": "Updates the schema of a data source.",
                            "request": {
                                "$ref": "UpdateSchemaRequest"
                            }
                        },
                        "deleteSchema": {
                            "response": {
                                "$ref": "Operation"
                            },
                            "parameterOrder": [
                                "name"
                            ],
                            "httpMethod": "DELETE",
                            "parameters": {
                                "name": {
                                    "description": "Name of the data source to delete Schema.  Format:\ndatasources/{source_id}",
                                    "required": true,
                                    "type": "string",
                                    "pattern": "^datasources/[^/]+$",
                                    "location": "path"
                                },
                                "debugOptions.enableDebugging": {
                                    "type": "boolean",
                                    "location": "query",
                                    "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging."
                                }
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud_search",
                                "https://www.googleapis.com/auth/cloud_search.settings",
                                "https://www.googleapis.com/auth/cloud_search.settings.indexing"
                            ],
                            "flatPath": "v1/indexing/datasources/{datasourcesId}/schema",
                            "path": "v1/indexing/{+name}/schema",
                            "id": "cloudsearch.indexing.datasources.deleteSchema",
                            "description": "Deletes the schema of a data source."
                        }
                    },
                    "resources": {
                        "items": {
                            "methods": {
                                "upload": {
                                    "description": "Creates an upload session for uploading item content. For items smaller\nthan 100 KiB, it's easier to embed the content\ninline within\nupdate.",
                                    "request": {
                                        "$ref": "StartUploadItemRequest"
                                    },
                                    "response": {
                                        "$ref": "UploadItemRef"
                                    },
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "httpMethod": "POST",
                                    "parameters": {
                                        "name": {
                                            "description": "Name of the Data Source to start a resumable upload.\nFormat: datasources/{source_id}",
                                            "required": true,
                                            "type": "string",
                                            "pattern": "^datasources/[^/]+/items/[^/]+$",
                                            "location": "path"
                                        }
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud_search",
                                        "https://www.googleapis.com/auth/cloud_search.indexing"
                                    ],
                                    "flatPath": "v1/indexing/datasources/{datasourcesId}/items/{itemsId}:upload",
                                    "path": "v1/indexing/{+name}:upload",
                                    "id": "cloudsearch.indexing.datasources.items.upload"
                                },
                                "deleteQueueItems": {
                                    "flatPath": "v1/indexing/datasources/{datasourcesId}/items:deleteQueueItems",
                                    "path": "v1/indexing/{+name}/items:deleteQueueItems",
                                    "id": "cloudsearch.indexing.datasources.items.deleteQueueItems",
                                    "description": "Deletes all items in a queue. This method is useful for deleting stale\nitems.",
                                    "request": {
                                        "$ref": "DeleteQueueItemsRequest"
                                    },
                                    "response": {
                                        "$ref": "Operation"
                                    },
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "httpMethod": "POST",
                                    "parameters": {
                                        "name": {
                                            "location": "path",
                                            "description": "Name of the Data Source to delete items in a queue.\nFormat: datasources/{source_id}",
                                            "required": true,
                                            "type": "string",
                                            "pattern": "^datasources/[^/]+$"
                                        }
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud_search",
                                        "https://www.googleapis.com/auth/cloud_search.indexing"
                                    ]
                                },
                                "get": {
                                    "description": "Gets Item resource by item name.",
                                    "httpMethod": "GET",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "response": {
                                        "$ref": "Item"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud_search",
                                        "https://www.googleapis.com/auth/cloud_search.indexing"
                                    ],
                                    "parameters": {
                                        "connectorName": {
                                            "type": "string",
                                            "location": "query",
                                            "description": "Name of connector making this call.\n<br />Format: datasources/{source_id}/connectors/{ID}"
                                        },
                                        "debugOptions.enableDebugging": {
                                            "location": "query",
                                            "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging.",
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "description": "Name of the item to get info.\nFormat: datasources/{source_id}/items/{item_id}",
                                            "required": true,
                                            "type": "string",
                                            "pattern": "^datasources/[^/]+/items/[^/]+$",
                                            "location": "path"
                                        }
                                    },
                                    "flatPath": "v1/indexing/datasources/{datasourcesId}/items/{itemsId}",
                                    "id": "cloudsearch.indexing.datasources.items.get",
                                    "path": "v1/indexing/{+name}"
                                },
                                "unreserve": {
                                    "response": {
                                        "$ref": "Operation"
                                    },
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "httpMethod": "POST",
                                    "parameters": {
                                        "name": {
                                            "pattern": "^datasources/[^/]+$",
                                            "location": "path",
                                            "description": "Name of the Data Source to unreserve all items.\nFormat: datasources/{source_id}",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud_search",
                                        "https://www.googleapis.com/auth/cloud_search.indexing"
                                    ],
                                    "flatPath": "v1/indexing/datasources/{datasourcesId}/items:unreserve",
                                    "path": "v1/indexing/{+name}/items:unreserve",
                                    "id": "cloudsearch.indexing.datasources.items.unreserve",
                                    "description": "Unreserves all items from a queue, making them all eligible to be\npolled.  This method is useful for resetting the indexing queue\nafter a connector has been restarted.",
                                    "request": {
                                        "$ref": "UnreserveItemsRequest"
                                    }
                                },
                                "index": {
                                    "httpMethod": "POST",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "response": {
                                        "$ref": "Operation"
                                    },
                                    "parameters": {
                                        "name": {
                                            "location": "path",
                                            "description": "Name of the Item. Format:\ndatasources/{source_id}/items/{item_id}\n<br />This is a required field.\nThe maximum length is 1536 characters.",
                                            "required": true,
                                            "type": "string",
                                            "pattern": "^datasources/[^/]+/items/[^/]+$"
                                        }
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud_search",
                                        "https://www.googleapis.com/auth/cloud_search.indexing"
                                    ],
                                    "flatPath": "v1/indexing/datasources/{datasourcesId}/items/{itemsId}:index",
                                    "id": "cloudsearch.indexing.datasources.items.index",
                                    "path": "v1/indexing/{+name}:index",
                                    "description": "Updates Item ACL, metadata, and\ncontent. It will insert the Item if it\ndoes not exist.\nThis method does not support partial updates.  Fields with no provided\nvalues are cleared out in the Cloud Search index.",
                                    "request": {
                                        "$ref": "IndexItemRequest"
                                    }
                                },
                                "poll": {
                                    "description": "Polls for unreserved items from the indexing queue and marks a\nset as reserved, starting with items that have\nthe oldest timestamp from the highest priority\nItemStatus.\nThe priority order is as follows: <br />\nERROR\n<br />\nMODIFIED\n<br />\nNEW_ITEM\n<br />\nACCEPTED\n<br />\nReserving items ensures that polling from other threads\ncannot create overlapping sets.\n\nAfter handling the reserved items, the client should put items back\ninto the unreserved state, either by calling\nindex,\nor by calling\npush with\nthe type REQUEUE.\n\nItems automatically become available (unreserved) after 4 hours even if no\nupdate or push method is called.",
                                    "request": {
                                        "$ref": "PollItemsRequest"
                                    },
                                    "response": {
                                        "$ref": "PollItemsResponse"
                                    },
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "httpMethod": "POST",
                                    "parameters": {
                                        "name": {
                                            "description": "Name of the Data Source to poll items.\nFormat: datasources/{source_id}",
                                            "required": true,
                                            "type": "string",
                                            "pattern": "^datasources/[^/]+$",
                                            "location": "path"
                                        }
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud_search",
                                        "https://www.googleapis.com/auth/cloud_search.indexing"
                                    ],
                                    "flatPath": "v1/indexing/datasources/{datasourcesId}/items:poll",
                                    "path": "v1/indexing/{+name}/items:poll",
                                    "id": "cloudsearch.indexing.datasources.items.poll"
                                },
                                "delete": {
                                    "response": {
                                        "$ref": "Operation"
                                    },
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "httpMethod": "DELETE",
                                    "parameters": {
                                        "version": {
                                            "location": "query",
                                            "description": "Required. The incremented version of the item to delete from the index.\nThe indexing system stores the version from the datasource as a\nbyte string and compares the Item version in the index\nto the version of the queued Item using lexical ordering.\n<br /><br />\nCloud Search Indexing won't delete any queued item with\na version value that is less than or equal to\nthe version of the currently indexed item.\nThe maximum length for this field is 1024 bytes.",
                                            "format": "byte",
                                            "type": "string"
                                        },
                                        "debugOptions.enableDebugging": {
                                            "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging.",
                                            "type": "boolean",
                                            "location": "query"
                                        },
                                        "mode": {
                                            "location": "query",
                                            "enum": [
                                                "UNSPECIFIED",
                                                "SYNCHRONOUS",
                                                "ASYNCHRONOUS"
                                            ],
                                            "description": "Required. The RequestMode for this request.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "pattern": "^datasources/[^/]+/items/[^/]+$",
                                            "location": "path",
                                            "description": "Required. Name of the item to delete.\nFormat: datasources/{source_id}/items/{item_id}",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "connectorName": {
                                            "description": "Name of connector making this call.\n<br />Format: datasources/{source_id}/connectors/{ID}",
                                            "type": "string",
                                            "location": "query"
                                        }
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud_search",
                                        "https://www.googleapis.com/auth/cloud_search.indexing"
                                    ],
                                    "flatPath": "v1/indexing/datasources/{datasourcesId}/items/{itemsId}",
                                    "path": "v1/indexing/{+name}",
                                    "id": "cloudsearch.indexing.datasources.items.delete",
                                    "description": "Deletes Item resource for the\nspecified resource name."
                                },
                                "push": {
                                    "httpMethod": "POST",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "response": {
                                        "$ref": "Item"
                                    },
                                    "parameters": {
                                        "name": {
                                            "location": "path",
                                            "description": "Name of the item to\npush into the indexing queue.<br />\nFormat: datasources/{source_id}/items/{ID}\n<br />This is a required field.\nThe maximum length is 1536 characters.",
                                            "required": true,
                                            "type": "string",
                                            "pattern": "^datasources/[^/]+/items/[^/]+$"
                                        }
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud_search",
                                        "https://www.googleapis.com/auth/cloud_search.indexing"
                                    ],
                                    "flatPath": "v1/indexing/datasources/{datasourcesId}/items/{itemsId}:push",
                                    "id": "cloudsearch.indexing.datasources.items.push",
                                    "path": "v1/indexing/{+name}:push",
                                    "description": "Pushes an item onto a queue for later polling and updating.",
                                    "request": {
                                        "$ref": "PushItemRequest"
                                    }
                                },
                                "list": {
                                    "httpMethod": "GET",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "response": {
                                        "$ref": "ListItemsResponse"
                                    },
                                    "parameters": {
                                        "connectorName": {
                                            "description": "Name of connector making this call.\n<br />Format: datasources/{source_id}/connectors/{ID}",
                                            "type": "string",
                                            "location": "query"
                                        },
                                        "brief": {
                                            "location": "query",
                                            "description": "When set to true, the indexing system only populates the following fields:\nname,\nversion,\nmetadata.hash,\nstructured_data.hash,\ncontent.hash.\n<br />If this value is false, then all the fields are populated in Item.",
                                            "type": "boolean"
                                        },
                                        "pageToken": {
                                            "location": "query",
                                            "description": "The next_page_token value returned from a previous List request, if any.",
                                            "type": "string"
                                        },
                                        "pageSize": {
                                            "description": "Maximum number of items to fetch in a request.\nThe max value is 1000 when brief is true.  The max value is 10 if brief\nis false.\n<br />The default value is 10",
                                            "format": "int32",
                                            "type": "integer",
                                            "location": "query"
                                        },
                                        "debugOptions.enableDebugging": {
                                            "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging.",
                                            "type": "boolean",
                                            "location": "query"
                                        },
                                        "name": {
                                            "description": "Name of the Data Source to list Items.  Format:\ndatasources/{source_id}",
                                            "required": true,
                                            "type": "string",
                                            "pattern": "^datasources/[^/]+$",
                                            "location": "path"
                                        }
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud_search",
                                        "https://www.googleapis.com/auth/cloud_search.indexing"
                                    ],
                                    "flatPath": "v1/indexing/datasources/{datasourcesId}/items",
                                    "id": "cloudsearch.indexing.datasources.items.list",
                                    "path": "v1/indexing/{+name}/items",
                                    "description": "Lists all or a subset of Item resources."
                                }
                            }
                        }
                    }
                }
            }
        },
        "query": {
            "methods": {
                "search": {
                    "id": "cloudsearch.query.search",
                    "path": "v1/query/search",
                    "description": "The Cloud Search Query API provides the search method, which returns\nthe most relevant results from a user query.  The results can come from\nG Suite Apps, such as Gmail or Google Drive, or they can come from data\nthat you have indexed from a third party.",
                    "request": {
                        "$ref": "SearchRequest"
                    },
                    "httpMethod": "POST",
                    "parameterOrder": [],
                    "response": {
                        "$ref": "SearchResponse"
                    },
                    "parameters": {},
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud_search",
                        "https://www.googleapis.com/auth/cloud_search.query"
                    ],
                    "flatPath": "v1/query/search"
                },
                "suggest": {
                    "flatPath": "v1/query/suggest",
                    "path": "v1/query/suggest",
                    "id": "cloudsearch.query.suggest",
                    "description": "Provides suggestions for autocompleting the query.",
                    "request": {
                        "$ref": "SuggestRequest"
                    },
                    "response": {
                        "$ref": "SuggestResponse"
                    },
                    "parameterOrder": [],
                    "httpMethod": "POST",
                    "parameters": {},
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud_search",
                        "https://www.googleapis.com/auth/cloud_search.query"
                    ]
                }
            },
            "resources": {
                "sources": {
                    "methods": {
                        "list": {
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud_search",
                                "https://www.googleapis.com/auth/cloud_search.query"
                            ],
                            "parameters": {
                                "requestOptions.languageCode": {
                                    "location": "query",
                                    "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\nFor translations.",
                                    "type": "string"
                                },
                                "requestOptions.searchApplicationId": {
                                    "description": "Id of the application created using SearchApplicationsService.",
                                    "type": "string",
                                    "location": "query"
                                },
                                "requestOptions.timeZone": {
                                    "type": "string",
                                    "location": "query",
                                    "description": "Current user's time zone id, such as \"America/Los_Angeles\" or\n\"Australia/Sydney\". These IDs are defined by\n[Unicode Common Locale Data Repository (CLDR)](http://cldr.unicode.org/)\nproject, and currently available in the file\n[timezone.xml](http://unicode.org/repos/cldr/trunk/common/bcp47/timezone.xml)"
                                },
                                "pageToken": {
                                    "location": "query",
                                    "description": "Number of sources to return in the response.",
                                    "type": "string"
                                },
                                "requestOptions.debugOptions.enableDebugging": {
                                    "type": "boolean",
                                    "location": "query",
                                    "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging."
                                }
                            },
                            "flatPath": "v1/query/sources",
                            "path": "v1/query/sources",
                            "id": "cloudsearch.query.sources.list",
                            "description": "Returns list of sources that user can use for Search and Suggest APIs.",
                            "response": {
                                "$ref": "ListQuerySourcesResponse"
                            },
                            "parameterOrder": [],
                            "httpMethod": "GET"
                        }
                    }
                }
            }
        },
        "operations": {
            "methods": {
                "get": {
                    "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
                    "response": {
                        "$ref": "Operation"
                    },
                    "parameterOrder": [
                        "name"
                    ],
                    "httpMethod": "GET",
                    "parameters": {
                        "name": {
                            "description": "The name of the operation resource.",
                            "required": true,
                            "type": "string",
                            "pattern": "^operations/.+$",
                            "location": "path"
                        }
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud_search",
                        "https://www.googleapis.com/auth/cloud_search.debug",
                        "https://www.googleapis.com/auth/cloud_search.indexing",
                        "https://www.googleapis.com/auth/cloud_search.settings",
                        "https://www.googleapis.com/auth/cloud_search.settings.indexing",
                        "https://www.googleapis.com/auth/cloud_search.settings.query"
                    ],
                    "flatPath": "v1/operations/{operationsId}",
                    "path": "v1/{+name}",
                    "id": "cloudsearch.operations.get"
                }
            }
        },
        "debug": {
            "resources": {
                "datasources": {
                    "resources": {
                        "items": {
                            "methods": {
                                "searchByViewUrl": {
                                    "path": "v1/debug/{+name}/items:searchByViewUrl",
                                    "id": "cloudsearch.debug.datasources.items.searchByViewUrl",
                                    "request": {
                                        "$ref": "SearchItemsByViewUrlRequest"
                                    },
                                    "description": "Fetches the item whose viewUrl exactly matches that of the URL provided\nin the request.",
                                    "response": {
                                        "$ref": "SearchItemsByViewUrlResponse"
                                    },
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "httpMethod": "POST",
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud_search",
                                        "https://www.googleapis.com/auth/cloud_search.debug"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "pattern": "^datasources/[^/]+$",
                                            "location": "path",
                                            "description": "Source name, format:\ndatasources/{source_id}",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "flatPath": "v1/debug/datasources/{datasourcesId}/items:searchByViewUrl"
                                },
                                "checkAccess": {
                                    "httpMethod": "POST",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "response": {
                                        "$ref": "CheckAccessResponse"
                                    },
                                    "parameters": {
                                        "name": {
                                            "pattern": "^datasources/[^/]+/items/[^/]+$",
                                            "location": "path",
                                            "description": "Item name, format:\ndatasources/{source_id}/items/{item_id}",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "debugOptions.enableDebugging": {
                                            "location": "query",
                                            "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging.",
                                            "type": "boolean"
                                        }
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud_search",
                                        "https://www.googleapis.com/auth/cloud_search.debug"
                                    ],
                                    "flatPath": "v1/debug/datasources/{datasourcesId}/items/{itemsId}:checkAccess",
                                    "id": "cloudsearch.debug.datasources.items.checkAccess",
                                    "path": "v1/debug/{+name}:checkAccess",
                                    "description": "Checks whether an item is accessible by specified principal.",
                                    "request": {
                                        "$ref": "Principal"
                                    }
                                }
                            },
                            "resources": {
                                "unmappedids": {
                                    "methods": {
                                        "list": {
                                            "description": "List all unmapped identities for a specific item.",
                                            "httpMethod": "GET",
                                            "response": {
                                                "$ref": "ListUnmappedIdentitiesResponse"
                                            },
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "parent": {
                                                    "location": "path",
                                                    "description": "The name of the item, in the following format:\ndatasources/{source_id}/items/{ID}",
                                                    "required": true,
                                                    "type": "string",
                                                    "pattern": "^datasources/[^/]+/items/[^/]+$"
                                                },
                                                "debugOptions.enableDebugging": {
                                                    "location": "query",
                                                    "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging.",
                                                    "type": "boolean"
                                                },
                                                "pageToken": {
                                                    "location": "query",
                                                    "description": "The next_page_token value returned from a previous List request, if any.",
                                                    "type": "string"
                                                },
                                                "pageSize": {
                                                    "location": "query",
                                                    "description": "Maximum number of items to fetch in a request.\nDefaults to 100.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud_search",
                                                "https://www.googleapis.com/auth/cloud_search.debug"
                                            ],
                                            "flatPath": "v1/debug/datasources/{datasourcesId}/items/{itemsId}/unmappedids",
                                            "id": "cloudsearch.debug.datasources.items.unmappedids.list",
                                            "path": "v1/debug/{+parent}/unmappedids"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "identitysources": {
                    "resources": {
                        "unmappedids": {
                            "methods": {
                                "list": {
                                    "id": "cloudsearch.debug.identitysources.unmappedids.list",
                                    "path": "v1/debug/{+parent}/unmappedids",
                                    "description": "Lists unmapped user identities for an identity source.",
                                    "httpMethod": "GET",
                                    "response": {
                                        "$ref": "ListUnmappedIdentitiesResponse"
                                    },
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "pageToken": {
                                            "location": "query",
                                            "description": "The next_page_token value returned from a previous List request, if any.",
                                            "type": "string"
                                        },
                                        "pageSize": {
                                            "description": "Maximum number of items to fetch in a request.\nDefaults to 100.",
                                            "format": "int32",
                                            "type": "integer",
                                            "location": "query"
                                        },
                                        "resolutionStatusCode": {
                                            "description": "Limit users selection to this status.",
                                            "type": "string",
                                            "location": "query",
                                            "enum": [
                                                "CODE_UNSPECIFIED",
                                                "NOT_FOUND",
                                                "IDENTITY_SOURCE_NOT_FOUND",
                                                "IDENTITY_SOURCE_MISCONFIGURED",
                                                "TOO_MANY_MAPPINGS_FOUND",
                                                "INTERNAL_ERROR"
                                            ]
                                        },
                                        "parent": {
                                            "description": "The name of the identity source, in the following format:\nidentitysources/{source_id}",
                                            "required": true,
                                            "type": "string",
                                            "pattern": "^identitysources/[^/]+$",
                                            "location": "path"
                                        },
                                        "debugOptions.enableDebugging": {
                                            "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging.",
                                            "type": "boolean",
                                            "location": "query"
                                        }
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud_search",
                                        "https://www.googleapis.com/auth/cloud_search.debug"
                                    ],
                                    "flatPath": "v1/debug/identitysources/{identitysourcesId}/unmappedids"
                                }
                            }
                        },
                        "items": {
                            "methods": {
                                "listForunmappedidentity": {
                                    "description": "Lists names of items associated with an unmapped identity.",
                                    "response": {
                                        "$ref": "ListItemNamesForUnmappedIdentityResponse"
                                    },
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "httpMethod": "GET",
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud_search",
                                        "https://www.googleapis.com/auth/cloud_search.debug"
                                    ],
                                    "parameters": {
                                        "debugOptions.enableDebugging": {
                                            "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging.",
                                            "type": "boolean",
                                            "location": "query"
                                        },
                                        "parent": {
                                            "required": true,
                                            "type": "string",
                                            "pattern": "^identitysources/[^/]+$",
                                            "location": "path",
                                            "description": "The name of the identity source, in the following format:\nidentitysources/{source_id}}"
                                        },
                                        "groupResourceName": {
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "userResourceName": {
                                            "type": "string",
                                            "location": "query"
                                        },
                                        "pageToken": {
                                            "description": "The next_page_token value returned from a previous List request, if any.",
                                            "type": "string",
                                            "location": "query"
                                        },
                                        "pageSize": {
                                            "location": "query",
                                            "description": "Maximum number of items to fetch in a request.\nDefaults to 100.",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "flatPath": "v1/debug/identitysources/{identitysourcesId}/items:forunmappedidentity",
                                    "path": "v1/debug/{+parent}/items:forunmappedidentity",
                                    "id": "cloudsearch.debug.identitysources.items.listForunmappedidentity"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "parameters": {
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "type": "string",
            "location": "query"
        },
        "quotaUser": {
            "location": "query",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "type": "string"
        },
        "prettyPrint": {
            "location": "query",
            "description": "Returns response with indentations and line breaks.",
            "type": "boolean",
            "default": "true"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "type": "string",
            "location": "query"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "type": "string",
            "location": "query"
        },
        "callback": {
            "type": "string",
            "location": "query",
            "description": "JSONP"
        },
        "oauth_token": {
            "location": "query",
            "description": "OAuth 2.0 token for the current user.",
            "type": "string"
        },
        "$.xgafv": {
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "enum": [
                "1",
                "2"
            ],
            "description": "V1 error format.",
            "type": "string"
        },
        "alt": {
            "description": "Data format for response.",
            "default": "json",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "type": "string",
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query"
        },
        "access_token": {
            "location": "query",
            "description": "OAuth access token.",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "type": "string",
            "location": "query"
        }
    },
    "version": "v1",
    "baseUrl": "https://cloudsearch.googleapis.com/",
    "kind": "discovery#restDescription",
    "description": "Cloud Search provides cloud-based search capabilities over G Suite data.  The Cloud Search API allows indexing of non-G Suite data into Cloud Search.",
    "servicePath": "",
    "basePath": "",
    "revision": "20181203",
    "documentationLink": "https://gsuite.google.com/products/cloud-search/",
    "id": "cloudsearch:v1",
    "discoveryVersion": "v1",
    "version_module": true,
    "schemas": {
        "SortOptions": {
            "properties": {
                "operatorName": {
                    "description": "Name of the operator corresponding to the field to sort on.\nThe corresponding property must be marked as\nsortable.",
                    "type": "string"
                },
                "sortOrder": {
                    "description": "Ascending is the default sort order",
                    "type": "string",
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "enum": [
                        "ASCENDING",
                        "DESCENDING"
                    ]
                }
            },
            "id": "SortOptions",
            "type": "object"
        },
        "Schema": {
            "description": "The schema definition for a data source.",
            "type": "object",
            "properties": {
                "operationIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IDs of the Long Running Operations (LROs) currently running for this\nschema. After modifying the schema, wait for opeations to complete\nbefore indexing additional content."
                },
                "objectDefinitions": {
                    "description": "The list of top-level objects for the data source.\nThe maximum number of elements is 10.",
                    "type": "array",
                    "items": {
                        "$ref": "ObjectDefinition"
                    }
                }
            },
            "id": "Schema"
        },
        "PropertyDefinition": {
            "id": "PropertyDefinition",
            "description": "The definition of a property within an object.",
            "type": "object",
            "properties": {
                "booleanPropertyOptions": {
                    "$ref": "BooleanPropertyOptions"
                },
                "timestampPropertyOptions": {
                    "$ref": "TimestampPropertyOptions"
                },
                "doublePropertyOptions": {
                    "$ref": "DoublePropertyOptions"
                },
                "textPropertyOptions": {
                    "$ref": "TextPropertyOptions"
                },
                "isRepeatable": {
                    "description": "Indicates that multiple values are allowed for the property. For example, a\ndocument only has one description but can have multiple comments. Cannot be\ntrue for properties whose type is a boolean.\nIf set to false, properties that contain more than one value will cause the\nindexing request for that item to be rejected.",
                    "type": "boolean"
                },
                "objectPropertyOptions": {
                    "$ref": "ObjectPropertyOptions"
                },
                "integerPropertyOptions": {
                    "$ref": "IntegerPropertyOptions"
                },
                "htmlPropertyOptions": {
                    "$ref": "HtmlPropertyOptions"
                },
                "enumPropertyOptions": {
                    "$ref": "EnumPropertyOptions"
                },
                "displayOptions": {
                    "$ref": "PropertyDisplayOptions",
                    "description": "Options that determine how the property is displayed in the Cloud Search\nresults page if it is specified to be displayed in the object's\ndisplay options\n."
                },
                "datePropertyOptions": {
                    "$ref": "DatePropertyOptions"
                },
                "isFacetable": {
                    "description": "Indicates that the property can be used for generating facets. Cannot be\ntrue for properties whose type is object. IsReturnable must be true to set\nthis option.\nOnly supported for Boolean, Enum, and Text properties.",
                    "type": "boolean"
                },
                "isSortable": {
                    "description": "Indicates that the property can be used for sorting. Cannot be true for\nproperties that are repeatable. Cannot be true for properties whose type\nis object or user identifier. IsReturnable must be true to set this option.\nOnly supported for Boolean, Date, Double, Integer, and Timestamp\nproperties.",
                    "type": "boolean"
                },
                "isReturnable": {
                    "description": "Indicates that the property identifies data that should be returned in search\nresults via the Query API. If set to *true*, indicates that Query API\nusers can use matching property fields in results. However, storing fields\nrequires more space allocation and uses more bandwidth for search queries,\nwhich impacts performance over large datasets. Set to *true* here only if\nthe field is needed for search results. Cannot be true for properties\nwhose type is an object.",
                    "type": "boolean"
                },
                "name": {
                    "description": "The name of the property. Item indexing requests sent to the Indexing API\nshould set the property name\nequal to this value. For example, if name is *subject_line*, then indexing\nrequests for document items with subject fields should set the\nname for that field equal to\n*subject_line*. Use the name as the identifier for the object property.\nOnce registered as a property for an object, you cannot re-use this name\nfor another property within that object.\nThe name must start with a letter and can only contain letters (A-Z, a-z)\nor numbers (0-9).\nThe maximum length is 256 characters.",
                    "type": "string"
                }
            }
        },
        "GSuitePrincipal": {
            "type": "object",
            "properties": {
                "gsuiteUserEmail": {
                    "description": "This principal references a G Suite user account",
                    "type": "string"
                },
                "gsuiteGroupEmail": {
                    "description": "This principal references a G Suite group account",
                    "type": "string"
                },
                "gsuiteDomain": {
                    "description": "This principal represents all users of the G Suite domain of the\ncustomer.",
                    "type": "boolean"
                }
            },
            "id": "GSuitePrincipal"
        },
        "TextPropertyOptions": {
            "type": "object",
            "properties": {
                "operatorOptions": {
                    "description": "If set, describes how the property should be used as a search operator.",
                    "$ref": "TextOperatorOptions"
                },
                "retrievalImportance": {
                    "$ref": "RetrievalImportance",
                    "description": "Indicates the search quality importance of the tokens within the\nfield when used for retrieval."
                }
            },
            "id": "TextPropertyOptions",
            "description": "Options for text properties."
        },
        "SuggestResponse": {
            "type": "object",
            "properties": {
                "suggestResults": {
                    "type": "array",
                    "items": {
                        "$ref": "SuggestResult"
                    },
                    "description": "List of suggestion results."
                }
            },
            "id": "SuggestResponse",
            "description": "Response of the suggest API."
        },
        "PeopleSuggestion": {
            "id": "PeopleSuggestion",
            "description": "A people suggestion.",
            "type": "object",
            "properties": {
                "person": {
                    "$ref": "Person",
                    "description": "Suggested person. All fields of the person object might not be populated."
                }
            }
        },
        "IndexItemRequest": {
            "properties": {
                "mode": {
                    "enum": [
                        "UNSPECIFIED",
                        "SYNCHRONOUS",
                        "ASYNCHRONOUS"
                    ],
                    "description": "Required. The RequestMode for this request.",
                    "type": "string",
                    "enumDescriptions": [
                        "Priority is not specified in the update request.\nLeaving priority unspecified results in an update failure.",
                        "For real-time updates.",
                        "For changes that are executed after the response is sent back to the\ncaller."
                    ]
                },
                "debugOptions": {
                    "$ref": "DebugOptions",
                    "description": "Common debug options."
                },
                "item": {
                    "description": "Name of the item.  Format:\ndatasources/{source_id}/items/{item_id}",
                    "$ref": "Item"
                },
                "connectorName": {
                    "description": "Name of connector making this call.\n<br />Format: datasources/{source_id}/connectors/{ID}",
                    "type": "string"
                }
            },
            "id": "IndexItemRequest",
            "type": "object"
        },
        "QueryInterpretationOptions": {
            "id": "QueryInterpretationOptions",
            "description": "Options to interpret user query.",
            "type": "object",
            "properties": {
                "disableNlInterpretation": {
                    "description": "Flag to disable natural language (NL) interpretation of queries. Default is\nfalse, Set to true to disable natural language interpretation. NL\ninterpretation only applies to predefined datasources.",
                    "type": "boolean"
                }
            }
        },
        "Snippet": {
            "description": "Snippet of the search result, which summarizes the content of the resulting\npage.",
            "type": "object",
            "properties": {
                "snippet": {
                    "description": "The snippet of the document.\nThe snippet of the document. May contain escaped HTML character that\nshould be unescaped prior to rendering.",
                    "type": "string"
                },
                "matchRanges": {
                    "description": "The matched ranges in the snippet.",
                    "type": "array",
                    "items": {
                        "$ref": "MatchRange"
                    }
                }
            },
            "id": "Snippet"
        },
        "DriveFollowUpRestrict": {
            "properties": {
                "type": {
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "enum": [
                        "UNSPECIFIED",
                        "FOLLOWUP_SUGGESTIONS",
                        "FOLLOWUP_ACTION_ITEMS"
                    ],
                    "type": "string"
                }
            },
            "id": "DriveFollowUpRestrict",
            "description": "Drive follow-up search restricts (e.g. \"followup:suggestions\").",
            "type": "object"
        },
        "IntegerValues": {
            "description": "List of integer values.",
            "type": "object",
            "properties": {
                "values": {
                    "description": "The maximum number of elements is 100.",
                    "type": "array",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    }
                }
            },
            "id": "IntegerValues"
        },
        "DoublePropertyOptions": {
            "description": "Options for double properties.",
            "type": "object",
            "properties": {
                "operatorOptions": {
                    "description": "If set, describes how the double should be used as a search operator.",
                    "$ref": "DoubleOperatorOptions"
                }
            },
            "id": "DoublePropertyOptions"
        },
        "BooleanPropertyOptions": {
            "properties": {
                "operatorOptions": {
                    "$ref": "BooleanOperatorOptions",
                    "description": "If set, describes how the boolean should be used as a search operator."
                }
            },
            "id": "BooleanPropertyOptions",
            "description": "Options for boolean properties.",
            "type": "object"
        },
        "SearchRequest": {
            "description": "The search API request.",
            "type": "object",
            "properties": {
                "requestOptions": {
                    "description": "Request options, such as the search application and user timezone.",
                    "$ref": "RequestOptions"
                },
                "dataSourceRestrictions": {
                    "description": "The sources to use for querying. If not specified, all data sources\nfrom the current search application are used.",
                    "type": "array",
                    "items": {
                        "$ref": "DataSourceRestriction"
                    }
                },
                "sortOptions": {
                    "$ref": "SortOptions",
                    "description": "The options for sorting the search results"
                },
                "facetOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "FacetOptions"
                    }
                },
                "pageSize": {
                    "description": "Maximum number of search results to return in one page.\nValid values are between 1 and 100, inclusive.\nDefault value is 10.",
                    "format": "int32",
                    "type": "integer"
                },
                "query": {
                    "description": "The raw query string.\nSee supported search operators in the [Cloud search\nCheat\nSheet](https://gsuite.google.com/learning-center/products/cloudsearch/cheat-sheet/)",
                    "type": "string"
                },
                "start": {
                    "description": "Starting index of the results.",
                    "format": "int32",
                    "type": "integer"
                },
                "queryInterpretationOptions": {
                    "$ref": "QueryInterpretationOptions",
                    "description": "Options to interpret the user query."
                }
            },
            "id": "SearchRequest"
        },
        "CompositeFilter": {
            "type": "object",
            "properties": {
                "logicOperator": {
                    "description": "The logic operator of the sub filter.",
                    "type": "string",
                    "enumDescriptions": [
                        "Logical operators, which can only be applied to sub filters.",
                        "",
                        "NOT can only be applied on a single sub filter."
                    ],
                    "enum": [
                        "AND",
                        "OR",
                        "NOT"
                    ]
                },
                "subFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "Filter"
                    },
                    "description": "Sub filters."
                }
            },
            "id": "CompositeFilter"
        },
        "EnumValuePair": {
            "description": "The enumeration value pair defines two things: a required string value and\nan optional integer value. The string value defines the necessary query\nterm required to retrieve that item, such as *p0* for a priority item.\nThe integer value determines the ranking of that string value relative\nto other enumerated values for the same property. For example, you might\nassociate *p0* with *0* and define another enum pair such as *p1* and *1*.\nYou must use the integer value in combination with\nordered\nranking to\nset the ranking of a given value relative to other enumerated values for\nthe same property name. Here, a ranking order of DESCENDING for *priority*\nproperties results in a ranking boost for items indexed with a value of\n*p0* compared to items indexed with a value of *p1*. Without a specified\nranking order, the integer value has no effect on item ranking.",
            "type": "object",
            "properties": {
                "stringValue": {
                    "description": "The string value of the EnumValuePair.\nThe maximum length is 32 characters.",
                    "type": "string"
                },
                "integerValue": {
                    "type": "integer",
                    "description": "The integer value of the EnumValuePair which must be non-negative.\nOptional.",
                    "format": "int32"
                }
            },
            "id": "EnumValuePair"
        },
        "SearchItemsByViewUrlResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "Item"
                    }
                },
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                }
            },
            "id": "SearchItemsByViewUrlResponse"
        },
        "ObjectOptions": {
            "description": "The options for an object.",
            "type": "object",
            "properties": {
                "displayOptions": {
                    "description": "Options that determine how the object is displayed in the Cloud Search\nresults page.",
                    "$ref": "ObjectDisplayOptions"
                },
                "freshnessOptions": {
                    "$ref": "FreshnessOptions",
                    "description": "The freshness options for an object."
                }
            },
            "id": "ObjectOptions"
        },
        "DeleteQueueItemsRequest": {
            "id": "DeleteQueueItemsRequest",
            "type": "object",
            "properties": {
                "connectorName": {
                    "type": "string",
                    "description": "Name of connector making this call.\n<br />Format: datasources/{source_id}/connectors/{ID}"
                },
                "queue": {
                    "description": "Name of a queue to delete items from.",
                    "type": "string"
                },
                "debugOptions": {
                    "$ref": "DebugOptions",
                    "description": "Common debug options."
                }
            }
        },
        "DriveTimeSpanRestrict": {
            "description": "The time span search restrict (e.g. \"after:2017-09-11 before:2017-09-12\").",
            "type": "object",
            "properties": {
                "type": {
                    "enum": [
                        "UNSPECIFIED",
                        "TODAY",
                        "YESTERDAY",
                        "LAST_7_DAYS",
                        "LAST_30_DAYS",
                        "LAST_90_DAYS"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "Not Enabled",
                        "Not Enabled"
                    ]
                }
            },
            "id": "DriveTimeSpanRestrict"
        },
        "FacetOptions": {
            "description": "Specifies operators to return facet results for. There will be one\nFacetResult for every source_name/object_type/operator_name combination.",
            "type": "object",
            "properties": {
                "sourceName": {
                    "description": "Source name to facet on. Format: datasources/{source_id}\nIf empty, all data sources will be used.",
                    "type": "string"
                },
                "operatorName": {
                    "description": "Name of the operator chosen for faceting. @see\ncloudsearch.SchemaPropertyOptions",
                    "type": "string"
                },
                "objectType": {
                    "description": "If object_type is set, only those objects of that type will be used to\ncompute facets. If empty, then all objects will be used to compute facets.",
                    "type": "string"
                }
            },
            "id": "FacetOptions"
        },
        "Person": {
            "id": "Person",
            "description": "Object to represent a person.",
            "type": "object",
            "properties": {
                "obfuscatedId": {
                    "description": "Obfuscated ID of a person.",
                    "type": "string"
                },
                "photos": {
                    "description": "A person's read-only photo. A picture shown next to the person's name to\nhelp others recognize the person in search results.",
                    "type": "array",
                    "items": {
                        "$ref": "Photo"
                    }
                },
                "personNames": {
                    "type": "array",
                    "items": {
                        "$ref": "Name"
                    },
                    "description": "The person's name"
                },
                "emailAddresses": {
                    "description": "The person's email addresses",
                    "type": "array",
                    "items": {
                        "$ref": "EmailAddress"
                    }
                },
                "name": {
                    "description": "The resource name of the person to provide information about.\nSee <a href=\"https://developers.google.com/people/api/rest/v1/people/get\">\nPeople.get</a> from Google People API.",
                    "type": "string"
                }
            }
        },
        "GetDataSourceIndexStatsResponse": {
            "id": "GetDataSourceIndexStatsResponse",
            "type": "object",
            "properties": {
                "stats": {
                    "description": "Summary of indexed item counts, one for each day in the requested range.",
                    "type": "array",
                    "items": {
                        "$ref": "DataSourceIndexStats"
                    }
                }
            }
        },
        "StructuredResult": {
            "properties": {
                "person": {
                    "$ref": "Person"
                }
            },
            "id": "StructuredResult",
            "description": "Structured results that are returned as part of search request.",
            "type": "object"
        },
        "ResultDisplayMetadata": {
            "id": "ResultDisplayMetadata",
            "type": "object",
            "properties": {
                "metalines": {
                    "description": "The metalines content to be displayed with the result.",
                    "type": "array",
                    "items": {
                        "$ref": "ResultDisplayLine"
                    }
                },
                "objectTypeLabel": {
                    "description": "The display label for the object.",
                    "type": "string"
                }
            }
        },
        "SpellResult": {
            "type": "object",
            "properties": {
                "suggestedQuery": {
                    "description": "The suggested spelling of the query.",
                    "type": "string"
                }
            },
            "id": "SpellResult"
        },
        "SearchApplication": {
            "description": "SearchApplication",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the Search Application.\n<br />Format: searchapplications/{application_id}.",
                    "type": "string"
                },
                "operationIds": {
                    "description": "IDs of the Long Running Operations (LROs) currently running for this schema.\nOutput only field.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dataSourceRestrictions": {
                    "description": "Retrictions applied to the configurations.\nThe maximum number of elements is 10.",
                    "type": "array",
                    "items": {
                        "$ref": "DataSourceRestriction"
                    }
                },
                "sourceConfig": {
                    "description": "Configuration for a sources specified in data_source_restrictions.",
                    "type": "array",
                    "items": {
                        "$ref": "SourceConfig"
                    }
                },
                "defaultSortOptions": {
                    "description": "The default options for sorting the search results",
                    "$ref": "SortOptions"
                },
                "displayName": {
                    "description": "Display name of the Search Application.\nThe maximum length is 300 characters.",
                    "type": "string"
                },
                "defaultFacetOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "FacetOptions"
                    },
                    "description": "The default fields for returning facet results.\nThe sources specified here also have been included in\ndata_source_restrictions\nabove."
                },
                "scoringConfig": {
                    "$ref": "ScoringConfig",
                    "description": "Configuration for ranking results."
                }
            },
            "id": "SearchApplication"
        },
        "DoubleOperatorOptions": {
            "description": "Used to provide a search operator for double properties. This is\noptional. Search operators let users restrict the query to specific fields\nrelevant to the type of item being searched.",
            "type": "object",
            "properties": {
                "operatorName": {
                    "description": "Indicates the operator name required in the query in order to use the\ndouble property in sorting or as a facet.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
                    "type": "string"
                }
            },
            "id": "DoubleOperatorOptions"
        },
        "QuerySuggestion": {
            "description": "A completed query suggestion.",
            "type": "object",
            "properties": {},
            "id": "QuerySuggestion"
        },
        "PollItemsRequest": {
            "type": "object",
            "properties": {
                "connectorName": {
                    "description": "Name of connector making this call.\n<br />Format: datasources/{source_id}/connectors/{ID}",
                    "type": "string"
                },
                "queue": {
                    "description": "Queue name to fetch items from.  If unspecified, PollItems will\nfetch from 'default' queue.\nThe maximum length is 100 characters.",
                    "type": "string"
                },
                "limit": {
                    "description": "Maximum number of items to return.\n<br />The maximum and the default value is 1000",
                    "format": "int32",
                    "type": "integer"
                },
                "statusCodes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "CODE_UNSPECIFIED",
                            "ERROR",
                            "MODIFIED",
                            "NEW_ITEM",
                            "ACCEPTED"
                        ]
                    },
                    "enumDescriptions": [
                        "Input-only value.  Used with\nItems.list\nto list all items in the queue, regardless of status.",
                        "Error encountered by Cloud Search while processing this item.\nDetails of the error are in\nrepositoryError.",
                        "Item has been modified in the repository, and is out of date with\nthe version previously accepted into Cloud Search.",
                        "Item is known to exist in the repository, but is not yet accepted by\nCloud Search.\nAn item can be in this state when\nItems.push\nhas been called for\nan item of this name that did not exist previously.",
                        "API has accepted the up-to-date data of this item."
                    ],
                    "description": "Limit the items polled to the ones with these statuses."
                },
                "debugOptions": {
                    "description": "Common debug options.",
                    "$ref": "DebugOptions"
                }
            },
            "id": "PollItemsRequest"
        },
        "EnumOperatorOptions": {
            "description": "Used to provide a search operator for enum properties. This is\noptional. Search operators let users restrict the query to specific fields\nrelevant to the type of item being searched. For example, if you provide no\noperator for a *priority* enum property with possible values *p0* and *p1*,\na query that contains the term *p0* will return items that have *p0* as the\nvalue of the *priority* property, as well as any items that contain the\nstring *p0* in other fields. If you provide an operator name for the enum,\nsuch as *priority*, then search users can use that operator to refine\nresults to only items that have *p0* as this property's value, with the\nquery *priority:p0*.",
            "type": "object",
            "properties": {
                "operatorName": {
                    "type": "string",
                    "description": "Indicates the operator name required in the query in order to isolate the\nenum property. For example, if operatorName is *priority* and the\nproperty's name is *priorityVal*, then queries like\n*priority:&lt;value&gt;* will show results only where the value of the\nproperty named *priorityVal* matches *&lt;value&gt;*. By contrast, a\nsearch that uses the same *&lt;value&gt;* without an operator will return\nall items where *&lt;value&gt;* matches the value of any String\nproperties or text within the content field for the item.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters."
                }
            },
            "id": "EnumOperatorOptions"
        },
        "SearchResponse": {
            "description": "The search API response.",
            "type": "object",
            "properties": {
                "structuredResults": {
                    "type": "array",
                    "items": {
                        "$ref": "StructuredResult"
                    },
                    "description": "Structured results for the user query. These results are not counted\nagainst the page_size."
                },
                "spellResults": {
                    "description": "Suggested spelling for the query.",
                    "type": "array",
                    "items": {
                        "$ref": "SpellResult"
                    }
                },
                "resultCountExact": {
                    "description": "The exact result count for this query.",
                    "format": "int64",
                    "type": "string"
                },
                "queryInterpretation": {
                    "description": "Query interpretation result for user query. Empty if query interpretation\nis disabled.",
                    "$ref": "QueryInterpretation"
                },
                "errorInfo": {
                    "description": "Error information about the response.",
                    "$ref": "ErrorInfo"
                },
                "hasMoreResults": {
                    "description": "Whether there are more search results matching the query.",
                    "type": "boolean"
                },
                "results": {
                    "description": "Results from a search query.",
                    "type": "array",
                    "items": {
                        "$ref": "SearchResult"
                    }
                },
                "resultCountEstimate": {
                    "description": "The estimated result count for this query.",
                    "format": "int64",
                    "type": "string"
                },
                "debugInfo": {
                    "$ref": "ResponseDebugInfo",
                    "description": "Debugging information about the response."
                },
                "resultCounts": {
                    "description": "Expanded result count information.",
                    "$ref": "ResultCounts"
                },
                "facetResults": {
                    "description": "Repeated facet results.",
                    "type": "array",
                    "items": {
                        "$ref": "FacetResult"
                    }
                }
            },
            "id": "SearchResponse"
        },
        "PropertyDisplayOptions": {
            "description": "The display options for a property.",
            "type": "object",
            "properties": {
                "displayLabel": {
                    "description": "The user friendly label for the property that will be used if the property\nis specified to be displayed in ObjectDisplayOptions. If given, the display\nlabel will be shown in front of the property values when the property is\npart of the object display options. For example, if the property value is\n'1', the value by itself may not be useful context for the user. If the\ndisplay name given was 'priority', then the user will see 'priority : 1' in\nthe search results which provides clear conext to search users. This is\nOPTIONAL; if not given, only the property values will be displayed.\nThe maximum length is 32 characters.",
                    "type": "string"
                }
            },
            "id": "PropertyDisplayOptions"
        },
        "ObjectDefinition": {
            "properties": {
                "options": {
                    "description": "The optional object-specific options.",
                    "$ref": "ObjectOptions"
                },
                "propertyDefinitions": {
                    "description": "The property definitions for the object.\nThe maximum number of elements is 1000.",
                    "type": "array",
                    "items": {
                        "$ref": "PropertyDefinition"
                    }
                },
                "name": {
                    "description": "Name for the object, which then defines its type. Item indexing requests\nshould set the\nobjectType field\nequal to this value. For example, if *name* is *Document*, then indexing\nrequests for items of type Document should set\nobjectType equal to\n*Document*. Each object definition must be uniquely named within a schema.\nThe name must start with a letter and can only contain letters (A-Z, a-z)\nor numbers (0-9).\nThe maximum length is 256 characters.",
                    "type": "string"
                }
            },
            "id": "ObjectDefinition",
            "description": "The definition for an object within a data source.",
            "type": "object"
        },
        "FreshnessOptions": {
            "description": "Indicates which freshness property to use when adjusting search ranking for\nan item. Fresher, more recent dates indicate higher quality. Use the\nfreshness option property that best works with your data. For fileshare\ndocuments, last modified time is most relevant. For calendar event data,\nthe time when the event occurs is a more relevant freshness indicator. In\nthis way, calendar events that occur closer to the time of the search query\nare considered higher quality and ranked accordingly.",
            "type": "object",
            "properties": {
                "freshnessDuration": {
                    "description": "The duration (in seconds) after which an object should be considered\nstale.",
                    "format": "google-duration",
                    "type": "string"
                },
                "freshnessProperty": {
                    "description": "This property indicates the freshness level of the object in the index.\nIf set, this property must be a top-level property within the\nproperty definitions\nand it must be a\ntimestamp type\nor\ndate type.\nOtherwise, the Indexing API uses\nupdateTime\nas the freshness indicator.\nThe maximum length is 256 characters.",
                    "type": "string"
                }
            },
            "id": "FreshnessOptions"
        },
        "UploadItemRef": {
            "properties": {
                "name": {
                    "description": "Name of the content reference.\nThe maximum length is 2048 characters.",
                    "type": "string"
                }
            },
            "id": "UploadItemRef",
            "description": "Represents an upload session reference.\nThis reference is created via upload\nmethod.\nUpdating of item content may refer to this uploaded content via\ncontentDataRef.",
            "type": "object"
        },
        "EmailAddress": {
            "type": "object",
            "properties": {
                "emailAddress": {
                    "description": "The email address.",
                    "type": "string"
                }
            },
            "id": "EmailAddress",
            "description": "A person's email address."
        },
        "HtmlOperatorOptions": {
            "description": "Used to provide a search operator for html properties. This is optional.\nSearch operators let users restrict the query to specific fields relevant\nto the type of item being searched.",
            "type": "object",
            "properties": {
                "operatorName": {
                    "description": "Indicates the operator name required in the query in order to isolate the\nhtml property. For example, if operatorName is *subject* and the\nproperty's name is *subjectLine*, then queries like\n*subject:&lt;value&gt;* will show results only where the value of the\nproperty named *subjectLine* matches *&lt;value&gt;*. By contrast, a\nsearch that uses the same *&lt;value&gt;* without an operator will return\nall items where *&lt;value&gt;* matches the value of any\nhtml properties or text within the content field for the item.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
                    "type": "string"
                }
            },
            "id": "HtmlOperatorOptions"
        },
        "QueryItem": {
            "id": "QueryItem",
            "description": "Information relevant only to a query entry.",
            "type": "object",
            "properties": {
                "isSynthetic": {
                    "description": "True if the text was generated by means other than a previous user search.",
                    "type": "boolean"
                }
            }
        },
        "ItemContent": {
            "description": "Content of an item to be indexed and surfaced by Cloud Search.",
            "type": "object",
            "properties": {
                "contentFormat": {
                    "enum": [
                        "UNSPECIFIED",
                        "HTML",
                        "TEXT",
                        "RAW"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                        "Invalid value.",
                        "contentFormat is HTML.",
                        "contentFormat is free text.",
                        "contentFormat is raw bytes."
                    ]
                },
                "hash": {
                    "description": "Hashing info calculated and provided by the API client for content.\nCan be used with the items.push method to calculate modified state.\nThe maximum length is 2048 characters.",
                    "type": "string"
                },
                "inlineContent": {
                    "type": "string",
                    "description": "Content that is supplied inlined within the update method.\nThe maximum length is 102400 bytes (100 KiB).",
                    "format": "byte"
                },
                "contentDataRef": {
                    "description": "Upload reference ID of a previously uploaded content via write method.",
                    "$ref": "UploadItemRef"
                }
            },
            "id": "ItemContent"
        },
        "CustomerIndexStats": {
            "id": "CustomerIndexStats",
            "description": "Aggregation of items by status code as of the specified date.",
            "type": "object",
            "properties": {
                "date": {
                    "description": "Date for which statistics were calculated.",
                    "$ref": "Date"
                },
                "itemCountByStatus": {
                    "type": "array",
                    "items": {
                        "$ref": "ItemCountByStatus"
                    },
                    "description": "Number of items aggregrated by status code."
                }
            }
        },
        "SourceCrowdingConfig": {
            "properties": {
                "numResults": {
                    "description": "Maximum number of results allowed from a source.\nNo limits will be set on results if this value is less than or equal to 0.",
                    "format": "int32",
                    "type": "integer"
                },
                "field": {
                    "description": "Use a field to control results crowding. For example, if you want to\ncontrol overly similar results from Gmail topics, use `thread_id`.\nFor similar pages from Google Sites, you can use `webspace_id`.\nWhen matching query results contain the same field value in\n`GenericMetadata`, crowding limits are set on those records.",
                    "type": "string"
                },
                "source": {
                    "description": "Control results by content source. This option limits the total number\nof results from a given source and ignores field-based crowding control.",
                    "type": "boolean"
                },
                "numSuggestions": {
                    "description": "Maximum number of suggestions allowed from a source.\nNo limits will be set on results if this value is less than or equal to 0.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "id": "SourceCrowdingConfig",
            "description": "Set search results crowding limits. Crowding is a situation in which\nmultiple results from the same source or host \"crowd out\" other results,\ndiminishing the quality of search for users. To foster better search quality\nand source diversity in search results, you can set a condition to reduce\nrepetitive results by source.",
            "type": "object"
        },
        "PushItem": {
            "id": "PushItem",
            "description": "Represents an item to be pushed to the indexing queue.",
            "type": "object",
            "properties": {
                "metadataHash": {
                    "description": "Metadata hash of the item according to the repository. If specified, this\nis used to determine how to modify this\nitem's status. Setting this field and the\ntype field results in argument\nerror.\nThe maximum length is 2048 characters.",
                    "type": "string"
                },
                "payload": {
                    "type": "string",
                    "description": "Provides additional document state information for the connector,\nsuch as an alternate repository ID and other metadata.\nThe maximum length is 8192 bytes.",
                    "format": "byte"
                },
                "repositoryError": {
                    "$ref": "RepositoryError",
                    "description": "Populate this field to store Connector or repository error details.\nThis information is displayed in the Admin Console.\nThis field may only be populated when the\nType is\nREPOSITORY_ERROR."
                },
                "type": {
                    "enumDescriptions": [
                        "Default UNSPECIFIED.  Specifies that the push operation should not modify\nItemStatus",
                        "Indicates that the repository document has been modified or updated since\nthe previous\nupdate\ncall. This changes status to\nMODIFIED state for\nan existing item. If this is called on a non existing item, the status is\nchanged to\nNEW_ITEM.",
                        "Item in the repository has not been modified since the last update\ncall.  This push operation will set status to\nACCEPTED state.",
                        "Connector is facing a repository error regarding this item.  Change\nstatus to\nREPOSITORY_ERROR\nstate. Item is unreserved and rescheduled at a future time determined by\nexponential backoff.",
                        "Call push with REQUEUE only for items that have been reserved.\nThis action unreserves the item and resets its available time to the\nwall clock time."
                    ],
                    "enum": [
                        "UNSPECIFIED",
                        "MODIFIED",
                        "NOT_MODIFIED",
                        "REPOSITORY_ERROR",
                        "REQUEUE"
                    ],
                    "description": "The type of the push operation that defines the push behavior.",
                    "type": "string"
                },
                "queue": {
                    "description": "Queue to which this item belongs to.  The <code>default</code> queue is\nchosen if this field is not specified. The maximum length is\n512 characters.",
                    "type": "string"
                },
                "structuredDataHash": {
                    "description": "Structured data hash of the item according to the repository. If specified,\nthis is used to determine how to modify this item's status. Setting this\nfield and the type field\nresults in argument error.\nThe maximum length is 2048 characters.",
                    "type": "string"
                },
                "contentHash": {
                    "description": "Content hash of the item according to the repository. If specified, this is\nused to determine how to modify this\nitem's status. Setting this field and the\ntype field results in argument\nerror.\nThe maximum length is 2048 characters.",
                    "type": "string"
                }
            }
        },
        "ObjectDisplayOptions": {
            "description": "The display options for an object.",
            "type": "object",
            "properties": {
                "objectDisplayLabel": {
                    "description": "The user friendly label to display in the search result to inidicate the\ntype of the item. This is OPTIONAL; if not given, an object label will not\nbe displayed on the context line of the search results. The maximum length\nis 32 characters.",
                    "type": "string"
                },
                "metalines": {
                    "type": "array",
                    "items": {
                        "$ref": "Metaline"
                    },
                    "description": "Defines the properties that will be displayed in the metalines of the\nsearch results. The property values will be displayed in the order given\nhere. If a property holds multiple values, all of the values will be\ndiplayed before the next properties. For this reason, it is a good practice\nto specify singular properties before repeated properties in this list. All\nof the properties must set\nis_returnable\nto true. The maximum number of elements is 3."
                }
            },
            "id": "ObjectDisplayOptions"
        },
        "CheckAccessResponse": {
            "type": "object",
            "properties": {
                "hasAccess": {
                    "description": "Returns true if principal has access.  Returns false otherwise.",
                    "type": "boolean"
                }
            },
            "id": "CheckAccessResponse"
        },
        "Date": {
            "description": "Represents a whole calendar date, for example a date of birth. The time of day and time zone are either specified elsewhere or are not significant. The date is relative to the [Proleptic Gregorian Calendar](https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar). The date must be a valid calendar date between the year 1 and 9999.",
            "type": "object",
            "properties": {
                "year": {
                    "description": "Year of date. Must be from 1 to 9999.",
                    "format": "int32",
                    "type": "integer"
                },
                "day": {
                    "description": "Day of month. Must be from 1 to 31 and valid for the year and month.",
                    "format": "int32",
                    "type": "integer"
                },
                "month": {
                    "description": "Month of date. Must be from 1 to 12.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "id": "Date"
        },
        "HtmlValues": {
            "description": "List of html values.",
            "type": "object",
            "properties": {
                "values": {
                    "description": "The maximum allowable length for html values is 2048 characters.\nThe maximum number of string elements is 100.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "id": "HtmlValues"
        },
        "ListSearchApplicationsResponse": {
            "type": "object",
            "properties": {
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                },
                "searchApplications": {
                    "type": "array",
                    "items": {
                        "$ref": "SearchApplication"
                    }
                }
            },
            "id": "ListSearchApplicationsResponse"
        },
        "TimestampOperatorOptions": {
            "description": "Used to provide a search operator for timestamp properties. This is\noptional. Search operators let users restrict the query to specific fields\nrelevant to the type of item being searched.",
            "type": "object",
            "properties": {
                "operatorName": {
                    "description": "Indicates the operator name required in the query in order to isolate the\ntimestamp property. For example, if operatorName is *closedon* and the\nproperty's name is *closeDate*, then queries like\n*closedon:&lt;value&gt;* will show results only where the value of the\nproperty named *closeDate* matches *&lt;value&gt;*. By contrast, a\nsearch that uses the same *&lt;value&gt;* without an operator will return\nall items where *&lt;value&gt;* matches the value of any String\nproperties or text within the content field for the item. The operator\nname can only contain lowercase letters (a-z). The maximum length is 32\ncharacters.",
                    "type": "string"
                },
                "greaterThanOperatorName": {
                    "type": "string",
                    "description": "Indicates the operator name required in the query in order to isolate the\ntimestamp property using the greater-than operator. For example, if\ngreaterThanOperatorName is *closedafter* and the property's name is\n*closeDate*, then queries like *closedafter:&lt;value&gt;* will\nshow results only where the value of the property named *closeDate* is\nlater than *&lt;value&gt;*.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters."
                },
                "lessThanOperatorName": {
                    "description": "Indicates the operator name required in the query in order to isolate the\ntimestamp property using the less-than operator. For example, if\nlessThanOperatorName is *closedbefore* and the property's name is\n*closeDate*, then queries like *closedbefore:&lt;value&gt;* will\nshow results only where the value of the property named *closeDate* is\nearlier than *&lt;value&gt;*.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
                    "type": "string"
                }
            },
            "id": "TimestampOperatorOptions"
        },
        "SearchResult": {
            "description": "Results containing indexed information for a document.",
            "type": "object",
            "properties": {
                "debugInfo": {
                    "description": "Debugging information about this search result.",
                    "$ref": "ResultDebugInfo"
                },
                "clusteredResults": {
                    "description": "If source is clustered, provide list of clustered results. There will only\nbe one level of clustered results. If current source is not enabled for\nclustering, this field will be empty.",
                    "type": "array",
                    "items": {
                        "$ref": "SearchResult"
                    }
                },
                "url": {
                    "description": "The URL of the result.",
                    "type": "string"
                },
                "metadata": {
                    "description": "Metadata of the search result.",
                    "$ref": "Metadata"
                },
                "snippet": {
                    "$ref": "Snippet",
                    "description": "The concatenation of all snippets (summaries) available for this result."
                },
                "title": {
                    "description": "Title of the search result.",
                    "type": "string"
                }
            },
            "id": "SearchResult"
        },
        "DoubleValues": {
            "description": "List of double values.",
            "type": "object",
            "properties": {
                "values": {
                    "description": "The maximum number of elements is 100.",
                    "type": "array",
                    "items": {
                        "format": "double",
                        "type": "number"
                    }
                }
            },
            "id": "DoubleValues"
        },
        "ListDataSourceResponse": {
            "type": "object",
            "properties": {
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "DataSource"
                    }
                }
            },
            "id": "ListDataSourceResponse"
        },
        "ErrorInfo": {
            "id": "ErrorInfo",
            "description": "Error information about the response.",
            "type": "object",
            "properties": {
                "errorMessages": {
                    "type": "array",
                    "items": {
                        "$ref": "ErrorMessage"
                    }
                }
            }
        },
        "ObjectValues": {
            "id": "ObjectValues",
            "description": "List of object values.",
            "type": "object",
            "properties": {
                "values": {
                    "description": "The maximum number of elements is 100.",
                    "type": "array",
                    "items": {
                        "$ref": "StructuredDataObject"
                    }
                }
            }
        },
        "DateValues": {
            "properties": {
                "values": {
                    "description": "The maximum number of elements is 100.",
                    "type": "array",
                    "items": {
                        "$ref": "Date"
                    }
                }
            },
            "id": "DateValues",
            "description": "List of date values.",
            "type": "object"
        },
        "Source": {
            "description": "Defines sources for the suggest/search APIs.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Source name for content indexed by the\nIndexing API.",
                    "type": "string"
                },
                "predefinedSource": {
                    "enumDescriptions": [
                        "",
                        "Suggests queries issued by the user in the past. Only valid when used\nwith the suggest API. Ignored when used in the query API.",
                        "Suggests people in the organization. Only valid when used\nwith the suggest API. Results in an error when used in the query API.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "enum": [
                        "NONE",
                        "QUERY_HISTORY",
                        "PERSON",
                        "GOOGLE_DRIVE",
                        "GOOGLE_GMAIL",
                        "GOOGLE_SITES",
                        "GOOGLE_GROUPS",
                        "GOOGLE_CALENDAR",
                        "GOOGLE_KEEP"
                    ],
                    "description": "Predefined content source for Google Apps.",
                    "type": "string"
                }
            },
            "id": "Source"
        },
        "Metadata": {
            "description": "Metadata of a matched search result.",
            "type": "object",
            "properties": {
                "objectType": {
                    "description": "Object type of the search result.",
                    "type": "string"
                },
                "mimeType": {
                    "description": "Mime type of the search result.",
                    "type": "string"
                },
                "displayOptions": {
                    "description": "Options that specify how to display a structured data search result.",
                    "$ref": "ResultDisplayMetadata"
                },
                "source": {
                    "description": "The named source for the result, such as Gmail.",
                    "$ref": "Source"
                },
                "createTime": {
                    "description": "The creation time for this document or object in the search result.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "updateTime": {
                    "description": "The last modified date for the object in the search result.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "owner": {
                    "description": "Owner (usually creator) of the document or object of the search result.",
                    "$ref": "Person"
                },
                "fields": {
                    "description": "Indexed fields in structured data, returned as a generic named property.",
                    "type": "array",
                    "items": {
                        "$ref": "NamedProperty"
                    }
                }
            },
            "id": "Metadata"
        },
        "MatchRange": {
            "properties": {
                "start": {
                    "description": "Starting position of the match in the snippet.",
                    "format": "int32",
                    "type": "integer"
                },
                "end": {
                    "description": "End of the match in the snippet.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "id": "MatchRange",
            "description": "Matched range of a snippet [start, end).",
            "type": "object"
        },
        "SuggestResult": {
            "description": "One suggestion result.",
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "Source",
                    "description": "The source of the suggestion."
                },
                "querySuggestion": {
                    "$ref": "QuerySuggestion"
                },
                "suggestedQuery": {
                    "description": "The suggested query that will be used for search, when the user\nclicks on the suggestion",
                    "type": "string"
                },
                "peopleSuggestion": {
                    "$ref": "PeopleSuggestion"
                }
            },
            "id": "SuggestResult"
        },
        "Operation": {
            "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "Status",
                    "description": "The error result of the operation in case of failure or cancellation."
                },
                "metadata": {
                    "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
                    "type": "object",
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    }
                },
                "done": {
                    "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
                    "type": "boolean"
                },
                "response": {
                    "additionalProperties": {
                        "type": "any",
                        "description": "Properties of the object. Contains field @type with type URL."
                    },
                    "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
                    "type": "object"
                },
                "name": {
                    "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations/some/unique/name`.",
                    "type": "string"
                }
            },
            "id": "Operation"
        },
        "DataSourceRestriction": {
            "type": "object",
            "properties": {
                "filterOptions": {
                    "description": "Filter options restricting the results. If multiple filters\nare present, they are grouped by object type before joining.\nFilters with the same object type are joined conjunctively, then\nthe resulting expressions are joined disjunctively.\n\nThe maximum number of elements is 20.",
                    "type": "array",
                    "items": {
                        "$ref": "FilterOptions"
                    }
                },
                "source": {
                    "$ref": "Source",
                    "description": "The source of restriction."
                }
            },
            "id": "DataSourceRestriction",
            "description": "Restriction on Datasource."
        },
        "UpdateSchemaRequest": {
            "type": "object",
            "properties": {
                "debugOptions": {
                    "$ref": "DebugOptions",
                    "description": "Common debug options."
                },
                "validateOnly": {
                    "description": "If true, the request will be validated without side effects.",
                    "type": "boolean"
                },
                "schema": {
                    "$ref": "Schema",
                    "description": "The new schema for the source."
                }
            },
            "id": "UpdateSchemaRequest"
        },
        "Status": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client."
                },
                "details": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "description": "Properties of the object. Contains field @type with type URL.",
                            "type": "any"
                        }
                    },
                    "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
                },
                "code": {
                    "description": "The status code, which should be an enum value of google.rpc.Code.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "id": "Status",
            "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons."
        },
        "DriveLocationRestrict": {
            "description": "Drive location search restricts (e.g. \"is:starred\").",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "enum": [
                        "UNSPECIFIED",
                        "TRASHED",
                        "STARRED"
                    ]
                }
            },
            "id": "DriveLocationRestrict"
        },
        "RetrievalImportance": {
            "type": "object",
            "properties": {
                "importance": {
                    "enum": [
                        "DEFAULT",
                        "HIGHEST",
                        "HIGH",
                        "LOW",
                        "NONE"
                    ],
                    "description": "Indicates the ranking importance given to property when it is matched\nduring retrieval. Once set, the token importance of a property cannot be\nchanged.",
                    "type": "string",
                    "enumDescriptions": [
                        "Treat the match like a body text match.",
                        "Treat the match like a match against title of the item.",
                        "Treat the match with higher importance than body text.",
                        "Treat the match with lower importance than body text.",
                        "Do not match against this field during retrieval. The property can still\nbe used for operator matching, faceting, and suggest if\ndesired."
                    ]
                }
            },
            "id": "RetrievalImportance"
        },
        "DisplayedProperty": {
            "type": "object",
            "properties": {
                "propertyName": {
                    "description": "The name of the top-level property as defined in a property definition\nfor the object. If the name is not a defined property in the schema, an\nerror will be given when attempting to update the schema.",
                    "type": "string"
                }
            },
            "id": "DisplayedProperty",
            "description": "A reference to a top-level property within the object that should be\ndisplayed in search results. The values of the chosen properties will be\ndisplayed in the search results along with the\ndislpay label\nfor that property if one is specified. If a display label is not specified,\nonly the values will be shown."
        },
        "ItemStatus": {
            "type": "object",
            "properties": {
                "processingErrors": {
                    "description": "Error details in case the item is in ERROR state.",
                    "type": "array",
                    "items": {
                        "$ref": "ProcessingError"
                    }
                },
                "code": {
                    "enum": [
                        "CODE_UNSPECIFIED",
                        "ERROR",
                        "MODIFIED",
                        "NEW_ITEM",
                        "ACCEPTED"
                    ],
                    "description": "Status code.",
                    "type": "string",
                    "enumDescriptions": [
                        "Input-only value.  Used with\nItems.list\nto list all items in the queue, regardless of status.",
                        "Error encountered by Cloud Search while processing this item.\nDetails of the error are in\nrepositoryError.",
                        "Item has been modified in the repository, and is out of date with\nthe version previously accepted into Cloud Search.",
                        "Item is known to exist in the repository, but is not yet accepted by\nCloud Search.\nAn item can be in this state when\nItems.push\nhas been called for\nan item of this name that did not exist previously.",
                        "API has accepted the up-to-date data of this item."
                    ]
                },
                "repositoryErrors": {
                    "description": "Repository error reported by connector.",
                    "type": "array",
                    "items": {
                        "$ref": "RepositoryError"
                    }
                }
            },
            "id": "ItemStatus",
            "description": "This contains item's status and any errors."
        },
        "FieldViolation": {
            "type": "object",
            "properties": {
                "field": {
                    "description": "Path of field with violation.",
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the error."
                }
            },
            "id": "FieldViolation"
        },
        "TextValues": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The maximum allowable length for text values is 2048 characters.\nThe maximum number of string elements is 100."
                }
            },
            "id": "TextValues",
            "description": "List of text values."
        },
        "SourceScoringConfig": {
            "description": "Set the scoring configuration. This allows modifying the ranking of results\nfor a source.",
            "type": "object",
            "properties": {
                "sourceImportance": {
                    "description": "Importance of the source.",
                    "type": "string",
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "enum": [
                        "DEFAULT",
                        "LOW",
                        "HIGH"
                    ]
                }
            },
            "id": "SourceScoringConfig"
        },
        "ObjectPropertyOptions": {
            "description": "Options for object properties.",
            "type": "object",
            "properties": {
                "subobjectProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "PropertyDefinition"
                    },
                    "description": "The properties of the sub-object. These properties represent a nested\nobject. For example, if this property represents a postal address, the\nsubobjectProperties might be named *street*, *city*, and *state*.\nThe maximum number of elements is 1000."
                }
            },
            "id": "ObjectPropertyOptions"
        },
        "DateOperatorOptions": {
            "description": "Optional. Provides a search operator for date properties.\nSearch operators let users restrict the query to specific fields relevant\nto the type of item being searched.",
            "type": "object",
            "properties": {
                "greaterThanOperatorName": {
                    "description": "Indicates the operator name required in the query in order to isolate the\ndate property using the greater-than operator. For example, if\ngreaterThanOperatorName is *closedafter* and the property's name is\n*closeDate*, then queries like *closedafter:&lt;value&gt;* will\nshow results only where the value of the property named *closeDate* is\nlater than *&lt;value&gt;*.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
                    "type": "string"
                },
                "lessThanOperatorName": {
                    "description": "Indicates the operator name required in the query in order to isolate the\ndate property using the less-than operator. For example, if\nlessThanOperatorName is *closedbefore* and the property's name is\n*closeDate*, then queries like *closedbefore:&lt;value&gt;* will\nshow results only where the value of the property named *closeDate* is\nearlier than *&lt;value&gt;*.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
                    "type": "string"
                },
                "operatorName": {
                    "description": "Indicates the actual string required in the query in order to isolate the\ndate property. For example, suppose an issue tracking schema object\nhas a property named *closeDate* that specifies an operator with an\noperatorName of *closedon*. For searches on that data, queries like\n*closedon:&lt;value&gt;* will show results only where the value of the\n*closeDate* property matches *&lt;value&gt;*. By contrast, a\nsearch that uses the same *&lt;value&gt;* without an operator will return\nall items where *&lt;value&gt;* matches the value of any String\nproperties or text within the content field for the indexed datasource.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
                    "type": "string"
                }
            },
            "id": "DateOperatorOptions"
        },
        "RequestOptions": {
            "properties": {
                "timeZone": {
                    "type": "string",
                    "description": "Current user's time zone id, such as \"America/Los_Angeles\" or\n\"Australia/Sydney\". These IDs are defined by\n[Unicode Common Locale Data Repository (CLDR)](http://cldr.unicode.org/)\nproject, and currently available in the file\n[timezone.xml](http://unicode.org/repos/cldr/trunk/common/bcp47/timezone.xml)"
                },
                "debugOptions": {
                    "$ref": "DebugOptions",
                    "description": "Debug options of the request"
                },
                "searchApplicationId": {
                    "description": "Id of the application created using SearchApplicationsService.",
                    "type": "string"
                },
                "languageCode": {
                    "type": "string",
                    "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\nFor translations."
                }
            },
            "id": "RequestOptions",
            "description": "Shared request options for all RPC methods.",
            "type": "object"
        },
        "ResultCounts": {
            "id": "ResultCounts",
            "description": "Result count information",
            "type": "object",
            "properties": {
                "sourceResultCounts": {
                    "description": "Result count information for each source with results.",
                    "type": "array",
                    "items": {
                        "$ref": "SourceResultCount"
                    }
                }
            }
        },
        "SuggestRequest": {
            "description": "Request of suggest API.",
            "type": "object",
            "properties": {
                "requestOptions": {
                    "$ref": "RequestOptions",
                    "description": "Request options, such as the search application and user timezone."
                },
                "query": {
                    "description": "Partial query for the completion suggestion.",
                    "type": "string"
                },
                "dataSourceRestrictions": {
                    "description": "The sources to use for suggestions. If not specified, all data sources\nfrom the current search application are used.",
                    "type": "array",
                    "items": {
                        "$ref": "DataSourceRestriction"
                    }
                }
            },
            "id": "SuggestRequest"
        },
        "TimestampPropertyOptions": {
            "type": "object",
            "properties": {
                "operatorOptions": {
                    "$ref": "TimestampOperatorOptions",
                    "description": "If set, describes how the timestamp should be used as a search operator."
                }
            },
            "id": "TimestampPropertyOptions",
            "description": "Options for timestamp properties."
        },
        "ScoringConfig": {
            "description": "Scoring configurations for a source while processing a\nSearch or\nSuggest request.",
            "type": "object",
            "properties": {
                "disablePersonalization": {
                    "description": "Whether to personalize the results. By default, personal signals will\nbe used to boost results.",
                    "type": "boolean"
                },
                "disableFreshness": {
                    "type": "boolean",
                    "description": "Whether to use freshness as a ranking signal. By default, freshness is used\nas a ranking signal."
                }
            },
            "id": "ScoringConfig"
        },
        "ValueFilter": {
            "type": "object",
            "properties": {
                "operatorName": {
                    "description": "The `operator_name` applied to the query, such as *price_greater_than*.\nThe filter can work against both types of filters defined in the schema\nfor your data source:\n<br/><br/>\n1. `operator_name`, where the query filters results by the property\nthat matches the value.\n<br/>\n2. `greater_than_operator_name` or `less_than_operator_name` in your\nschema. The query filters the results for the property values that are\ngreater than or less than  the supplied value in the query.",
                    "type": "string"
                },
                "value": {
                    "description": "The value to be compared with.",
                    "$ref": "Value"
                }
            },
            "id": "ValueFilter"
        },
        "ListItemNamesForUnmappedIdentityResponse": {
            "type": "object",
            "properties": {
                "nextPageToken": {
                    "type": "string",
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list."
                },
                "itemNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "id": "ListItemNamesForUnmappedIdentityResponse"
        },
        "ResponseDebugInfo": {
            "description": "Debugging information about the response.",
            "type": "object",
            "properties": {
                "formattedDebugInfo": {
                    "description": "General debug info formatted for display.",
                    "type": "string"
                }
            },
            "id": "ResponseDebugInfo"
        },
        "NamedProperty": {
            "properties": {
                "booleanValue": {
                    "type": "boolean"
                },
                "textValues": {
                    "$ref": "TextValues"
                },
                "htmlValues": {
                    "$ref": "HtmlValues"
                },
                "timestampValues": {
                    "$ref": "TimestampValues"
                },
                "objectValues": {
                    "$ref": "ObjectValues"
                },
                "dateValues": {
                    "$ref": "DateValues"
                },
                "enumValues": {
                    "$ref": "EnumValues"
                },
                "integerValues": {
                    "$ref": "IntegerValues"
                },
                "name": {
                    "description": "The name of the property.  This name should correspond to the name of the\nproperty that was registered for object definition in the schema.\nThe maximum allowable length for this property is 256 characters.",
                    "type": "string"
                },
                "doubleValues": {
                    "$ref": "DoubleValues"
                }
            },
            "id": "NamedProperty",
            "description": "A typed name-value pair for structured data.  The type of the value should\nbe the same as the registered type for the `name` property in the object\ndefinition of `objectType`.",
            "type": "object"
        },
        "UnmappedIdentity": {
            "type": "object",
            "properties": {
                "externalIdentity": {
                    "description": "The resource name for an external user.",
                    "$ref": "Principal"
                },
                "resolutionStatusCode": {
                    "enumDescriptions": [
                        "Input-only value.  Used to list all unmapped identities regardless of\nstatus.",
                        "The unmapped identity was not found in IDaaS, and needs to be provided by\nthe user.",
                        "The identity source associated with the identity was either not found or\ndeleted.",
                        "IDaaS does not understand the identity source, probably because the\nschema was modified in a non compatible way.",
                        "The number of users associated with the external identity is too large.",
                        "Internal error."
                    ],
                    "enum": [
                        "CODE_UNSPECIFIED",
                        "NOT_FOUND",
                        "IDENTITY_SOURCE_NOT_FOUND",
                        "IDENTITY_SOURCE_MISCONFIGURED",
                        "TOO_MANY_MAPPINGS_FOUND",
                        "INTERNAL_ERROR"
                    ],
                    "description": "The resolution status for the external identity.",
                    "type": "string"
                }
            },
            "id": "UnmappedIdentity"
        },
        "PushItemRequest": {
            "type": "object",
            "properties": {
                "debugOptions": {
                    "$ref": "DebugOptions",
                    "description": "Common debug options."
                },
                "item": {
                    "$ref": "PushItem",
                    "description": "Item to push onto the queue."
                },
                "connectorName": {
                    "description": "Name of connector making this call.\n<br />Format: datasources/{source_id}/connectors/{ID}",
                    "type": "string"
                }
            },
            "id": "PushItemRequest"
        },
        "SearchItemsByViewUrlRequest": {
            "type": "object",
            "properties": {
                "viewUrl": {
                    "description": "Specify the full view URL to find the corresponding item.\nThe maximum length is 2048 characters.",
                    "type": "string"
                },
                "debugOptions": {
                    "$ref": "DebugOptions",
                    "description": "Common debug options."
                },
                "pageToken": {
                    "description": "The next_page_token value returned from a previous request, if any.",
                    "type": "string"
                }
            },
            "id": "SearchItemsByViewUrlRequest"
        },
        "PollItemsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "Set of items from the queue available for connector to process.\n<br />These items have the following subset of fields populated: <br />\n<br />version\n<br />metadata.hash\n<br />structured_data.hash\n<br />content.hash\n<br />payload\n<br />status\n<br />queue",
                    "type": "array",
                    "items": {
                        "$ref": "Item"
                    }
                }
            },
            "id": "PollItemsResponse"
        },
        "ListItemsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "Item"
                    }
                },
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                }
            },
            "id": "ListItemsResponse"
        },
        "UnreserveItemsRequest": {
            "type": "object",
            "properties": {
                "connectorName": {
                    "type": "string",
                    "description": "Name of connector making this call.\n<br />Format: datasources/{source_id}/connectors/{ID}"
                },
                "queue": {
                    "description": "Name of a queue to unreserve items from.",
                    "type": "string"
                },
                "debugOptions": {
                    "description": "Common debug options.",
                    "$ref": "DebugOptions"
                }
            },
            "id": "UnreserveItemsRequest"
        },
        "HtmlPropertyOptions": {
            "properties": {
                "operatorOptions": {
                    "$ref": "HtmlOperatorOptions",
                    "description": "If set, describes how the property should be used as a search operator."
                },
                "retrievalImportance": {
                    "$ref": "RetrievalImportance",
                    "description": "Indicates the search quality importance of the tokens within the\nfield when used for retrieval. Can only be set to DEFAULT or NONE."
                }
            },
            "id": "HtmlPropertyOptions",
            "description": "Options for html properties.",
            "type": "object"
        },
        "QueryOperator": {
            "type": "object",
            "properties": {
                "operatorName": {
                    "description": "The name of the operator.",
                    "type": "string"
                },
                "isSortable": {
                    "description": "Can this operator be used to sort results.",
                    "type": "boolean"
                },
                "isFacetable": {
                    "description": "Can this operator be used to get facets.",
                    "type": "boolean"
                },
                "isReturnable": {
                    "description": "Will the property associated with this facet be returned as part of search\nresults.",
                    "type": "boolean"
                },
                "isRepeatable": {
                    "description": "Indicates if multiple values can be set for this property.",
                    "type": "boolean"
                },
                "greaterThanOperatorName": {
                    "description": "Indicates the operator name that can be used to  isolate the property using\nthe greater-than operator.",
                    "type": "string"
                },
                "enumValues": {
                    "description": "Potential list of values for the opeatror field. This field is only filled\nwhen we can safely enumerate all the possible values of this operator.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isSuggestable": {
                    "description": "Can get suggestions for this field.",
                    "type": "boolean"
                },
                "lessThanOperatorName": {
                    "description": "Indicates the operator name that can be used to  isolate the property using\nthe less-than operator.",
                    "type": "string"
                },
                "type": {
                    "enumDescriptions": [
                        "Invalid value.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "enum": [
                        "UNKNOWN",
                        "INTEGER",
                        "DOUBLE",
                        "TIMESTAMP",
                        "BOOLEAN",
                        "ENUM",
                        "DATE",
                        "TEXT",
                        "HTML"
                    ],
                    "description": "Type of the operator.",
                    "type": "string"
                },
                "displayName": {
                    "description": "Display name of the operator",
                    "type": "string"
                }
            },
            "id": "QueryOperator",
            "description": "The definition of a operator that can be used in a Search/Suggest request."
        },
        "TimestampValues": {
            "description": "List of timestamp values.",
            "type": "object",
            "properties": {
                "values": {
                    "description": "The maximum number of elements is 100.",
                    "type": "array",
                    "items": {
                        "format": "google-datetime",
                        "type": "string"
                    }
                }
            },
            "id": "TimestampValues"
        },
        "SearchQualityMetadata": {
            "description": "Additional search quality metadata of the item.",
            "type": "object",
            "properties": {
                "quality": {
                    "type": "number",
                    "description": "An indication of the quality of the item, used to influence search quality.\nValue should be between 0.0 (lowest quality) and 1.0 (highest quality).",
                    "format": "double"
                }
            },
            "id": "SearchQualityMetadata"
        },
        "DatePropertyOptions": {
            "id": "DatePropertyOptions",
            "description": "Options for date properties.",
            "type": "object",
            "properties": {
                "operatorOptions": {
                    "$ref": "DateOperatorOptions",
                    "description": "If set, describes how the date should be used as a search operator."
                }
            }
        },
        "RestrictItem": {
            "id": "RestrictItem",
            "description": "Information relevant only to a restrict entry.\nNextId: 7",
            "type": "object",
            "properties": {
                "driveLocationRestrict": {
                    "$ref": "DriveLocationRestrict"
                },
                "driveTimeSpanRestrict": {
                    "$ref": "DriveTimeSpanRestrict"
                },
                "driveMimeTypeRestrict": {
                    "$ref": "DriveMimeTypeRestrict"
                },
                "searchOperator": {
                    "description": "The search restrict (e.g. \"after:2017-09-11 before:2017-09-12\").",
                    "type": "string"
                },
                "driveFollowUpRestrict": {
                    "$ref": "DriveFollowUpRestrict"
                }
            }
        },
        "DriveMimeTypeRestrict": {
            "description": "Drive mime-type search restricts (e.g. \"type:pdf\").",
            "type": "object",
            "properties": {
                "type": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "enum": [
                        "UNSPECIFIED",
                        "PDF",
                        "DOCUMENT",
                        "PRESENTATION",
                        "SPREADSHEET",
                        "FORM",
                        "DRAWING",
                        "SCRIPT",
                        "MAP",
                        "IMAGE",
                        "AUDIO",
                        "VIDEO",
                        "FOLDER",
                        "ARCHIVE",
                        "SITE"
                    ],
                    "type": "string"
                }
            },
            "id": "DriveMimeTypeRestrict"
        },
        "Metaline": {
            "id": "Metaline",
            "description": "A metaline is a list of properties that are displayed along with the search\nresult to provide context.",
            "type": "object",
            "properties": {
                "properties": {
                    "description": "The list of displayed properties for the metaline.",
                    "type": "array",
                    "items": {
                        "$ref": "DisplayedProperty"
                    }
                }
            }
        },
        "BooleanOperatorOptions": {
            "id": "BooleanOperatorOptions",
            "description": "Used to provide a search operator for boolean properties. This is\noptional. Search operators let users restrict the query to specific fields\nrelevant to the type of item being searched.",
            "type": "object",
            "properties": {
                "operatorName": {
                    "description": "Indicates the operator name required in the query in order to isolate the\nboolean property. For example, if operatorName is *closed* and the\nproperty's name is *isClosed*, then queries like\n*closed:&lt;value&gt;* will show results only where the value of the\nproperty named *isClosed* matches *&lt;value&gt;*. By contrast, a\nsearch that uses the same *&lt;value&gt;* without an operator will return\nall items where *&lt;value&gt;* matches the value of any\nString properties or text within the content field for the item.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
                    "type": "string"
                }
            }
        },
        "SourceConfig": {
            "description": "Configurations for a source while processing a\nSearch or\nSuggest request.",
            "type": "object",
            "properties": {
                "scoringConfig": {
                    "description": "The scoring configuration for the source.",
                    "$ref": "SourceScoringConfig"
                },
                "crowdingConfig": {
                    "$ref": "SourceCrowdingConfig",
                    "description": "The crowding configuration for the source."
                },
                "source": {
                    "$ref": "Source",
                    "description": "The source for which this configuration is to be used."
                }
            },
            "id": "SourceConfig"
        },
        "DataSource": {
            "description": "Data source is a logical namespace for items to be indexed.\nAll items must belong to a data source.  This is the prerequisite before\nitems can be indexed into Cloud Search.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the data source resource.\nFormat: datasources/{source_id}.\n<br />The name is ignored when creating a data source.",
                    "type": "string"
                },
                "operationIds": {
                    "description": "IDs of the Long Running Operations (LROs) currently running for this schema.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "disableModifications": {
                    "description": "If true, Indexing API rejects any modification calls to this data source\nsuch as create, update, and delete.\nDisabling this does not imply halting process of previously\naccepted data.",
                    "type": "boolean"
                },
                "indexingServiceAccounts": {
                    "description": "List of service accounts that have indexing access.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "displayName": {
                    "description": "Required. Display name of the data source\nThe maximum length is 300 characters.",
                    "type": "string"
                },
                "disableServing": {
                    "type": "boolean",
                    "description": "Disable serving any search or assist results."
                },
                "itemsVisibility": {
                    "description": "This restricts visibility to items at a data source level to the\ndisjunction of users/groups mentioned with the field. Note that, this\ndoes not ensure access to a specific item, as users need to have ACL\npermissions on the contained items. This ensures a high level access\non the entire data source, and that the individual items are not shared\noutside this visibility.",
                    "type": "array",
                    "items": {
                        "$ref": "GSuitePrincipal"
                    }
                },
                "shortName": {
                    "description": "A short name or alias for the source.  This value will be used to match the\n'source' operator. For example, if the short name is *&lt;value&gt;* then\nqueries like *source:&lt;value&gt;* will only return results for this\nsource. The value must be unique across all data sources. The value must\nonly contain alphanumeric characters (a-zA-Z0-9). The value cannot start\nwith 'google' and cannot be one of the following: mail, gmail, docs, drive,\ngroups, sites, calendar, hangouts, gplus, keep.\nIts maximum length is 32 characters.",
                    "type": "string"
                }
            },
            "id": "DataSource"
        },
        "UpdateDataSourceRequest": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "DataSource"
                },
                "debugOptions": {
                    "description": "Common debug options.",
                    "$ref": "DebugOptions"
                }
            },
            "id": "UpdateDataSourceRequest"
        },
        "ItemCountByStatus": {
            "type": "object",
            "properties": {
                "count": {
                    "description": "Number of items matching the status code.",
                    "format": "int64",
                    "type": "string"
                },
                "statusCode": {
                    "description": "Status of the items.",
                    "type": "string",
                    "enumDescriptions": [
                        "Input-only value.  Used with\nItems.list\nto list all items in the queue, regardless of status.",
                        "Error encountered by Cloud Search while processing this item.\nDetails of the error are in\nrepositoryError.",
                        "Item has been modified in the repository, and is out of date with\nthe version previously accepted into Cloud Search.",
                        "Item is known to exist in the repository, but is not yet accepted by\nCloud Search.\nAn item can be in this state when\nItems.push\nhas been called for\nan item of this name that did not exist previously.",
                        "API has accepted the up-to-date data of this item."
                    ],
                    "enum": [
                        "CODE_UNSPECIFIED",
                        "ERROR",
                        "MODIFIED",
                        "NEW_ITEM",
                        "ACCEPTED"
                    ]
                }
            },
            "id": "ItemCountByStatus"
        },
        "FacetResult": {
            "description": "Source specific facet response",
            "type": "object",
            "properties": {
                "objectType": {
                    "type": "string",
                    "description": "Object type for which facet results are returned. Can be empty."
                },
                "sourceName": {
                    "description": "Source name for which facet results are returned. Will not be empty.",
                    "type": "string"
                },
                "buckets": {
                    "description": "FacetBuckets for values in response containing atleast a single result.",
                    "type": "array",
                    "items": {
                        "$ref": "FacetBucket"
                    }
                },
                "operatorName": {
                    "description": "Name of the operator chosen for faceting. @see\ncloudsearch.SchemaPropertyOptions",
                    "type": "string"
                }
            },
            "id": "FacetResult"
        },
        "IntegerPropertyOptions": {
            "description": "Options for integer properties.",
            "type": "object",
            "properties": {
                "orderedRanking": {
                    "enum": [
                        "NO_ORDER",
                        "ASCENDING",
                        "DESCENDING"
                    ],
                    "description": "Used to specify the ordered ranking for the integer. Can only be used if\nisRepeatable\nis false.",
                    "type": "string",
                    "enumDescriptions": [
                        "There is no ranking order for the property. Results will not be adjusted\nby this property's value.",
                        "This property is ranked in ascending order. Lower values indicate lower\nranking.",
                        "This property is ranked in descending order. Lower values indicate\nhigher ranking."
                    ]
                },
                "maximumValue": {
                    "description": "The maximum value of the property. The minimum and maximum values for the\nproperty are used to rank results according to the\nordered ranking.\nIndexing requests with values greater than the maximum are accepted and\nranked with the same weight as items indexed with the maximum value.",
                    "format": "int64",
                    "type": "string"
                },
                "minimumValue": {
                    "description": "The minimum value of the property. The minimum and maximum values for the\nproperty are used to rank results according to the\nordered ranking.\nIndexing requests with values less than the minimum are accepted and\nranked with the same weight as items indexed with the minimum value.",
                    "format": "int64",
                    "type": "string"
                },
                "operatorOptions": {
                    "$ref": "IntegerOperatorOptions",
                    "description": "If set, describes how the integer should be used as a search operator."
                }
            },
            "id": "IntegerPropertyOptions"
        },
        "ItemMetadata": {
            "description": "Available metadata fields for the item.",
            "type": "object",
            "properties": {
                "mimeType": {
                    "description": "The original mime-type of\nItemContent.content\nin the source repository.\nThe maximum length is 256 characters.",
                    "type": "string"
                },
                "title": {
                    "description": "The title of the item.  If given, this will be the displayed title of the\nSearch result.\nThe maximum length is 2048 characters.",
                    "type": "string"
                },
                "createTime": {
                    "type": "string",
                    "description": "The time when the item was created in the source repository.",
                    "format": "google-datetime"
                },
                "contentLanguage": {
                    "description": "The BCP-47 language code for the item, such as \"en-US\" or \"sr-Latn\". For\nmore information, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\nThe maximum length is 32 characters.",
                    "type": "string"
                },
                "sourceRepositoryUrl": {
                    "description": "Link to the source repository serving the data.  &#83;earch results apply\nthis link to the title.\nThe maximum length is 2048 characters.",
                    "type": "string"
                },
                "updateTime": {
                    "description": "The time when the item was last modified in the source repository.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "containerName": {
                    "description": "The name of the container for this item.\nDeletion of the container item leads to automatic deletion of this\nitem.  Note: ACLs are not inherited from a container item.\nTo provide ACL inheritance for an item, use the\ninheritAclFrom\nfield. The maximum length is 1536 characters.",
                    "type": "string"
                },
                "objectType": {
                    "description": "The type of the item.  This should correspond to the name of an object\ndefinition in the schema registered for the data source.  For example, if\nthe schema for the data source contains an object definition with name\n'document', then item indexing requests for objects of that type should set\nobjectType to 'document'.\nThe maximum length is 256 characters.",
                    "type": "string"
                },
                "hash": {
                    "type": "string",
                    "description": "Hashing value provided by the API caller.\nThis can be used with the\nitems.push\nmethod to calculate modified state.\nThe maximum length is 2048 characters."
                },
                "searchQualityMetadata": {
                    "description": "Additional search quality metadata of the item",
                    "$ref": "SearchQualityMetadata"
                },
                "interactions": {
                    "description": "A list of interactions for the item.  Interactions are used to improve\nSearch quality, but are not exposed to end users.\nThe maximum number of elements is 1000.",
                    "type": "array",
                    "items": {
                        "$ref": "Interaction"
                    }
                },
                "keywords": {
                    "description": "Additional keywords or phrases that should match the item.\nUsed internally for user generated content.\nThe maximum number of elements is 100.\nThe maximum length is 8192 characters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "id": "ItemMetadata"
        },
        "StructuredDataObject": {
            "description": "A structured data object consisting of named properties.",
            "type": "object",
            "properties": {
                "properties": {
                    "description": "The properties for the object.\nThe maximum number of elements is 1000.",
                    "type": "array",
                    "items": {
                        "$ref": "NamedProperty"
                    }
                }
            },
            "id": "StructuredDataObject"
        },
        "EnumPropertyOptions": {
            "description": "Options for enum properties, which allow you to define a restricted set of\nstrings to match user queries, set rankings for those string values, and\ndefine an operator name to be paired with those strings so that users can\nnarrow results to only items with a specific value. For example, for items in\na request tracking system with priority information, you could define *p0* as\nan allowable enum value and tie this enum to the operator name *priority* so\nthat search users could add *priority:p0* to their query to restrict the set\nof results to only those items indexed with the value *p0*.",
            "type": "object",
            "properties": {
                "orderedRanking": {
                    "description": "Used to specify the ordered ranking for the enumeration that determines how\nthe integer values provided in the possible EnumValuePairs are used to rank\nresults. If specified, integer values must be provided for all possible\nEnumValuePair values given for this property. Can only be used if\nisRepeatable\nis false.",
                    "type": "string",
                    "enumDescriptions": [
                        "There is no ranking order for the property. Results will not be adjusted\nby this property's value.",
                        "This property is ranked in ascending order. Lower values indicate lower\nranking.",
                        "This property is ranked in descending order. Lower values indicate\nhigher ranking."
                    ],
                    "enum": [
                        "NO_ORDER",
                        "ASCENDING",
                        "DESCENDING"
                    ]
                },
                "operatorOptions": {
                    "description": "If set, describes how the enum should be used as a search operator.",
                    "$ref": "EnumOperatorOptions"
                },
                "possibleValues": {
                    "description": "The list of possible values for the enumeration property. All\nEnumValuePairs must provide a string value. If you specify an integer value\nfor one EnumValuePair, then all possible EnumValuePairs must provide an\ninteger value. Both the string value and integer value must be unique over\nall possible values. Once set, possible values cannot be removed or\nmodified. If you supply an ordered ranking and think you might insert\nadditional enum values in the future, leave gaps in the initial integer\nvalues to allow adding a value in between previously registered values.\nThe maximum number of elements is 100.",
                    "type": "array",
                    "items": {
                        "$ref": "EnumValuePair"
                    }
                }
            },
            "id": "EnumPropertyOptions"
        },
        "SourceResultCount": {
            "description": "Per source result count information.",
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "Source",
                    "description": "The source the result count information is associated with."
                },
                "resultCountExact": {
                    "description": "The exact result count for this source.",
                    "format": "int64",
                    "type": "string"
                },
                "resultCountEstimate": {
                    "description": "The estimated result count for this source.",
                    "format": "int64",
                    "type": "string"
                },
                "hasMoreResults": {
                    "type": "boolean",
                    "description": "Whether there are more search results for this source."
                }
            },
            "id": "SourceResultCount"
        },
        "GetCustomerIndexStatsResponse": {
            "id": "GetCustomerIndexStatsResponse",
            "type": "object",
            "properties": {
                "stats": {
                    "description": "Summary of indexed item counts, one for each day in the requested range.",
                    "type": "array",
                    "items": {
                        "$ref": "CustomerIndexStats"
                    }
                }
            }
        },
        "QuerySource": {
            "type": "object",
            "properties": {
                "operators": {
                    "description": "List of all operators applicable for this source.",
                    "type": "array",
                    "items": {
                        "$ref": "QueryOperator"
                    }
                },
                "shortName": {
                    "description": "A short name or alias for the source.  This value can be used with the\n'source' operator.",
                    "type": "string"
                },
                "displayName": {
                    "description": "Display name of the data source.",
                    "type": "string"
                },
                "source": {
                    "description": "Name of the source",
                    "$ref": "Source"
                }
            },
            "id": "QuerySource",
            "description": "List of sources that the user can search using the query API."
        },
        "QueryInterpretation": {
            "type": "object",
            "properties": {
                "interpretedQuery": {
                    "description": "The interpretation of the query used in search. For example, query \"email\nfrom john\" will be interpreted as \"from:john source:mail\"",
                    "type": "string"
                },
                "interpretationType": {
                    "enumDescriptions": [
                        "No natural language interpretation or the natural language interpretation\nis not used to fetch the search results.",
                        "The natural language results is mixed with results from original query.",
                        "The results only contain natural language results."
                    ],
                    "enum": [
                        "NONE",
                        "BLEND",
                        "REPLACE"
                    ],
                    "type": "string"
                }
            },
            "id": "QueryInterpretation"
        },
        "ErrorMessage": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "Source"
                },
                "errorMessage": {
                    "type": "string"
                }
            },
            "id": "ErrorMessage",
            "description": "Error message per source response."
        },
        "TextOperatorOptions": {
            "properties": {
                "operatorName": {
                    "description": "Indicates the operator name required in the query in order to isolate the\ntext property. For example, if operatorName is *subject* and the\nproperty's name is *subjectLine*, then queries like\n*subject:&lt;value&gt;* will show results only where the value of the\nproperty named *subjectLine* matches *&lt;value&gt;*. By contrast, a\nsearch that uses the same *&lt;value&gt;* without an operator will return\nall items where *&lt;value&gt;* matches the value of any\ntext properties or text within the content field for the item.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
                    "type": "string"
                },
                "exactMatchWithOperator": {
                    "description": "If true, the text value will be tokenized as one atomic value in\noperator searches and facet matches. For example, if the operator name is\n\"genre\" and the value is \"science-fiction\" the query restrictions\n\"genre:science\" and \"genre:fiction\" will not match the item;\n\"genre:science-fiction\" will. Value matching is case-sensitive\nand does not remove special characters.\nIf false, the text will be tokenized. For example, if the value is\n\"science-fiction\" the queries \"genre:science\" and \"genre:fiction\" will\nmatch the item.",
                    "type": "boolean"
                }
            },
            "id": "TextOperatorOptions",
            "description": "Used to provide a search operator for text properties. This is optional.\nSearch operators let users restrict the query to specific fields relevant\nto the type of item being searched.",
            "type": "object"
        },
        "ResultDisplayField": {
            "description": "Display Fields for Search Results",
            "type": "object",
            "properties": {
                "operatorName": {
                    "description": "The operator name of the property.",
                    "type": "string"
                },
                "label": {
                    "description": "The display label for the property.",
                    "type": "string"
                },
                "property": {
                    "$ref": "NamedProperty",
                    "description": "The name value pair for the property."
                }
            },
            "id": "ResultDisplayField"
        },
        "ListQuerySourcesResponse": {
            "description": "List sources response.",
            "type": "object",
            "properties": {
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "QuerySource"
                    }
                },
                "nextPageToken": {
                    "type": "string"
                }
            },
            "id": "ListQuerySourcesResponse"
        },
        "Media": {
            "id": "Media",
            "description": "Media resource.",
            "type": "object",
            "properties": {
                "resourceName": {
                    "description": "Name of the media resource.",
                    "type": "string"
                }
            }
        },
        "FacetBucket": {
            "properties": {
                "count": {
                    "description": "Number of results that match the bucket value.",
                    "format": "int32",
                    "type": "integer"
                },
                "percentage": {
                    "description": "Percent of results that match the bucket value. This value is between\n(0-100].\nThis may not be accurate and is a best effort estimate.",
                    "format": "int32",
                    "type": "integer"
                },
                "value": {
                    "$ref": "Value"
                }
            },
            "id": "FacetBucket",
            "description": "A bucket in a facet is the basic unit of operation. A bucket can comprise\neither a single value OR a contiguous range of values, depending on the\ntype of the field bucketed.\nFacetBucket is currently used only for returning the response object.",
            "type": "object"
        },
        "Filter": {
            "description": "A generic way of expressing filters in a query, which supports two\napproaches: <br/><br/>\n**1. Setting a ValueFilter.** The name must match an operator_name defined in\nthe schema for your data source.\n<br/>\n**2. Setting a CompositeFilter.** The filters are evaluated\nusing the logical operator. The top-level operators can only be either an AND\nor a NOT. AND can appear only at the top-most level. OR can appear only under\na top-level AND.",
            "type": "object",
            "properties": {
                "valueFilter": {
                    "$ref": "ValueFilter"
                },
                "compositeFilter": {
                    "$ref": "CompositeFilter"
                }
            },
            "id": "Filter"
        },
        "IntegerOperatorOptions": {
            "description": "Used to provide a search operator for integer properties. This is\noptional. Search operators let users restrict the query to specific fields\nrelevant to the type of item being searched.",
            "type": "object",
            "properties": {
                "greaterThanOperatorName": {
                    "description": "Indicates the operator name required in the query in order to isolate the\ninteger property using the greater-than operator. For example, if\ngreaterThanOperatorName is *priorityabove* and the property's name is\n*priorityVal*, then queries like *priorityabove:&lt;value&gt;* will\nshow results only where the value of the property named *priorityVal* is\ngreater than *&lt;value&gt;*.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
                    "type": "string"
                },
                "lessThanOperatorName": {
                    "description": "Indicates the operator name required in the query in order to isolate the\ninteger property using the less-than operator. For example, if\nlessThanOperatorName is *prioritybelow* and the property's name is\n*priorityVal*, then queries like *prioritybelow:&lt;value&gt;* will\nshow results only where the value of the property named *priorityVal* is\nless than *&lt;value&gt;*.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
                    "type": "string"
                },
                "operatorName": {
                    "description": "Indicates the operator name required in the query in order to isolate the\ninteger property. For example, if operatorName is *priority* and the\nproperty's name is *priorityVal*, then queries like\n*priority:&lt;value&gt;* will show results only where the value of the\nproperty named *priorityVal* matches *&lt;value&gt;*. By contrast, a\nsearch that uses the same *&lt;value&gt;* without an operator will return\nall items where *&lt;value&gt;* matches the value of any String\nproperties or text within the content field for the item.\nThe operator name can only contain lowercase letters (a-z).\nThe maximum length is 32 characters.",
                    "type": "string"
                }
            },
            "id": "IntegerOperatorOptions"
        },
        "Name": {
            "id": "Name",
            "description": "A person's name.",
            "type": "object",
            "properties": {
                "displayName": {
                    "description": "The read-only display name formatted according to the locale specified by\nthe viewer's account or the <code>Accept-Language</code> HTTP header.",
                    "type": "string"
                }
            }
        },
        "ResetSearchApplicationRequest": {
            "type": "object",
            "properties": {
                "debugOptions": {
                    "$ref": "DebugOptions",
                    "description": "Common debug options."
                }
            },
            "id": "ResetSearchApplicationRequest"
        },
        "FilterOptions": {
            "type": "object",
            "properties": {
                "objectType": {
                    "description": "If object_type is set, only objects of that type are returned. This should\ncorrespond to the name of the object that was registered within the\ndefinition of schema. The maximum length is 256 characters.",
                    "type": "string"
                },
                "filter": {
                    "$ref": "Filter",
                    "description": "Generic filter to restrict the search, such as `lang:en`, `site:xyz`."
                }
            },
            "id": "FilterOptions",
            "description": "Filter options to be applied on query."
        },
        "ProcessingError": {
            "id": "ProcessingError",
            "type": "object",
            "properties": {
                "fieldViolations": {
                    "description": "In case the item fields are invalid, this field contains the details\nabout the validation errors.",
                    "type": "array",
                    "items": {
                        "$ref": "FieldViolation"
                    }
                },
                "code": {
                    "enum": [
                        "PROCESSING_ERROR_CODE_UNSPECIFIED",
                        "MALFORMED_REQUEST",
                        "UNSUPPORTED_CONTENT_FORMAT",
                        "INDIRECT_BROKEN_ACL",
                        "ACL_CYCLE"
                    ],
                    "description": "Error code indicating the nature of the error.",
                    "type": "string",
                    "enumDescriptions": [
                        "Input only value.  Use this value in Items.",
                        "Item's ACL, metadata, or content is malformed or in invalid state.\nFieldViolations contains more details on where the problem is.",
                        "Countent format is unsupported.",
                        "Items with incomplete ACL information due to inheriting other\nitems with broken ACL or having groups with unmapped descendants.",
                        "ACL inheritance graph formed a cycle."
                    ]
                },
                "errorMessage": {
                    "description": "Description of the error.",
                    "type": "string"
                }
            }
        },
        "EnumValues": {
            "properties": {
                "values": {
                    "description": "The maximum allowable length for string values is 32 characters.\nThe maximum number of elements is 100.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "id": "EnumValues",
            "description": "List of enum values.",
            "type": "object"
        },
        "ListUnmappedIdentitiesResponse": {
            "id": "ListUnmappedIdentitiesResponse",
            "type": "object",
            "properties": {
                "unmappedIdentities": {
                    "type": "array",
                    "items": {
                        "$ref": "UnmappedIdentity"
                    }
                },
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                }
            }
        },
        "ResultDisplayLine": {
            "id": "ResultDisplayLine",
            "description": "The collection of fields that make up a displayed line",
            "type": "object",
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "ResultDisplayField"
                    }
                }
            }
        },
        "DataSourceIndexStats": {
            "type": "object",
            "properties": {
                "date": {
                    "$ref": "Date",
                    "description": "Date for which index stats were calculated. If the date of request is not\nthe current date then stats calculated on the next day are returned. Stats\nare calculated close to mid night in this case. If date of request is\ncurrent date, then real time stats are returned."
                },
                "itemCountByStatus": {
                    "description": "Number of items aggregrated by status code.",
                    "type": "array",
                    "items": {
                        "$ref": "ItemCountByStatus"
                    }
                }
            },
            "id": "DataSourceIndexStats",
            "description": "Aggregation of items by status code as of the specified date."
        },
        "ItemStructuredData": {
            "description": "Available structured data fields for the item.",
            "type": "object",
            "properties": {
                "hash": {
                    "description": "Hashing value provided by the API caller.\nThis can be used with the\nitems.push\nmethod to calculate modified state.\nThe maximum length is 2048 characters.",
                    "type": "string"
                },
                "object": {
                    "$ref": "StructuredDataObject",
                    "description": "The structured data object that should conform to a registered object\ndefinition in the schema for the data source."
                }
            },
            "id": "ItemStructuredData"
        },
        "DebugOptions": {
            "id": "DebugOptions",
            "description": "Shared request debug options for all cloudsearch RPC methods.",
            "type": "object",
            "properties": {
                "enableDebugging": {
                    "description": "If set, the request will enable debugging features of Cloud Search.\nOnly turn on this field, if asked by Google to help with debugging.",
                    "type": "boolean"
                }
            }
        },
        "Item": {
            "description": "Represents a single object that is an item in the search index, such as a\nfile, folder, or a database record.",
            "type": "object",
            "properties": {
                "payload": {
                    "description": "Additional state connector can store for this item.\nThe maximum length is 10000 bytes.",
                    "format": "byte",
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Item. Format:\ndatasources/{source_id}/items/{item_id}\n<br />This is a required field.\nThe maximum length is 1536 characters."
                },
                "acl": {
                    "$ref": "ItemAcl",
                    "description": "Access control list for this item."
                },
                "content": {
                    "description": "Item content to be indexed and made text searchable.",
                    "$ref": "ItemContent"
                },
                "metadata": {
                    "$ref": "ItemMetadata",
                    "description": "Metadata information."
                },
                "version": {
                    "description": "Required. The indexing system stores the version from the datasource as a\nbyte string and compares the Item version in the index\nto the version of the queued Item using lexical ordering.\n<br /><br />\nCloud Search Indexing won't index or delete any queued item with\na version value that is less than or equal to the version of the\ncurrently indexed item.\nThe maximum length for this field is 1024 bytes.",
                    "format": "byte",
                    "type": "string"
                },
                "queue": {
                    "description": "Queue this item belongs to.\nThe maximum length is 100 characters.",
                    "type": "string"
                },
                "itemType": {
                    "description": "Type for this item.",
                    "type": "string",
                    "enumDescriptions": [
                        "",
                        "An item that is indexed for the only purpose of serving information.\nThese items cannot be referred in\ncontainerName\nor inheritAclFrom\nfields.",
                        "An item that gets indexed and whose purpose is to supply other items\nwith ACLs and/or contain other items.",
                        "An item that does not get indexed, but otherwise has the same purpose\nas CONTAINER_ITEM."
                    ],
                    "enum": [
                        "UNSPECIFIED",
                        "CONTENT_ITEM",
                        "CONTAINER_ITEM",
                        "VIRTUAL_CONTAINER_ITEM"
                    ]
                },
                "structuredData": {
                    "$ref": "ItemStructuredData",
                    "description": "The structured data for the item that should conform to a registered\nobject definition in the schema for the data source."
                },
                "status": {
                    "$ref": "ItemStatus",
                    "description": "Status of the item.\nOutput only field."
                }
            },
            "id": "Item"
        },
        "Interaction": {
            "properties": {
                "principal": {
                    "$ref": "Principal",
                    "description": "The user that acted on the item."
                },
                "type": {
                    "enumDescriptions": [
                        "Invalid value.",
                        "This interaction indicates the user viewed the item.",
                        "This interaction indicates the user edited the item."
                    ],
                    "enum": [
                        "UNSPECIFIED",
                        "VIEW",
                        "EDIT"
                    ],
                    "type": "string"
                },
                "interactionTime": {
                    "description": "The time when the user acted on the item.  If multiple actions of the same\ntype exist for a single user, only the most recent action is recorded.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "id": "Interaction",
            "description": "Represents an interaction between a user and an item.",
            "type": "object"
        },
        "Value": {
            "properties": {
                "integerValue": {
                    "format": "int64",
                    "type": "string"
                },
                "stringValue": {
                    "type": "string"
                },
                "dateValue": {
                    "$ref": "Date"
                },
                "doubleValue": {
                    "format": "double",
                    "type": "number"
                },
                "timestampValue": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "booleanValue": {
                    "type": "boolean"
                }
            },
            "id": "Value",
            "description": "Definition of a single value with generic type.",
            "type": "object"
        },
        "StartUploadItemRequest": {
            "id": "StartUploadItemRequest",
            "description": "Start upload file request.",
            "type": "object",
            "properties": {
                "connectorName": {
                    "description": "Name of connector making this call.\n<br />Format: datasources/{source_id}/connectors/{ID}",
                    "type": "string"
                },
                "debugOptions": {
                    "$ref": "DebugOptions",
                    "description": "Common debug options."
                }
            }
        },
        "Photo": {
            "description": "A person's photo.",
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "description": "The URL of the photo."
                }
            },
            "id": "Photo"
        },
        "ItemAcl": {
            "description": "Access control list information for the item. For more information see\nhttps://developers.google.com/cloud-search/docs/guides/index-your-data#acls",
            "type": "object",
            "properties": {
                "inheritAclFrom": {
                    "description": "Name of the item to inherit the Access Permission List (ACL) from.\nNote: ACL inheritance *only* provides access permissions\nto child items and does not define structural relationships, nor does it\nprovide convenient ways to delete large groups of items.\nDeleting an ACL parent from the index only alters the access permissions of\nchild items that reference the parent in the\ninheritAclFrom\nfield. The item is still in the index, but may not\nvisible in search results. By contrast, deletion of a container item\nalso deletes all items that reference the container via the\ncontainerName\nfield.\nThe maximum length for this field is 1536 characters.",
                    "type": "string"
                },
                "deniedReaders": {
                    "type": "array",
                    "items": {
                        "$ref": "Principal"
                    },
                    "description": "List of principals who are explicitly denied access to the item in search\nresults. While principals are denied access by default, use denied readers\nto handle exceptions and override the list allowed readers.\nThe maximum number of elements is 100."
                },
                "readers": {
                    "description": "List of principals who are allowed to see the item in search results.\nOptional if inheriting permissions from another item or if the item\nis not intended to be visible, such as\nvirtual containers.\nThe maximum number of elements is 1000.",
                    "type": "array",
                    "items": {
                        "$ref": "Principal"
                    }
                },
                "aclInheritanceType": {
                    "enumDescriptions": [
                        "The default value when this item does not inherit an ACL.\nUse NOT_APPLICABLE when\ninheritAclFrom\nis empty.  An item without ACL inheritance can still have ACLs supplied\nby its own readers and\ndeniedReaders fields.",
                        "During an authorization conflict, the ACL of the child item determines\nits read access.",
                        "During an authorization conflict, the ACL of the parent item\nspecified in the\ninheritAclFrom\nfield determines read access.",
                        "Access is granted only if this item and the parent item specified in\nthe inheritAclFrom\nfield both permit read access."
                    ],
                    "enum": [
                        "NOT_APPLICABLE",
                        "CHILD_OVERRIDE",
                        "PARENT_OVERRIDE",
                        "BOTH_PERMIT"
                    ],
                    "description": "Sets the type of access rules to apply when an item inherits its ACL from a\nparent. This should always be set in tandem with the\ninheritAclFrom\nfield. Also, when the\ninheritAclFrom field\nis set, this field should be set to a valid AclInheritanceType.",
                    "type": "string"
                },
                "owners": {
                    "description": "Optional. List of owners for the item. This field has no bearing on\ndocument access permissions. It does, however, offer\na slight ranking boosts items where the querying user is an owner.\nThe maximum number of elements is 5.",
                    "type": "array",
                    "items": {
                        "$ref": "Principal"
                    }
                }
            },
            "id": "ItemAcl"
        },
        "RepositoryError": {
            "properties": {
                "type": {
                    "enumDescriptions": [
                        "Unknown error.",
                        "Unknown or unreachable host.",
                        "DNS problem, such as the DNS server is not responding.",
                        "Cannot connect to the repository server.",
                        "Failed authentication due to incorrect credentials.",
                        "Service account is not authorized for the repository.",
                        "Repository server error.",
                        "Quota exceeded.",
                        "Server temporarily unavailable.",
                        "Client-related error, such as an invalid request from the connector to\nthe repository server."
                    ],
                    "enum": [
                        "UNKNOWN",
                        "NETWORK_ERROR",
                        "DNS_ERROR",
                        "CONNECTION_ERROR",
                        "AUTHENTICATION_ERROR",
                        "AUTHORIZATION_ERROR",
                        "SERVER_ERROR",
                        "QUOTA_EXCEEDED",
                        "SERVICE_UNAVAILABLE",
                        "CLIENT_ERROR"
                    ],
                    "description": "Type of error.",
                    "type": "string"
                },
                "errorMessage": {
                    "description": "Message that describes the error. The maximum allowable length\nof the message is 8192 characters.",
                    "type": "string"
                },
                "httpStatusCode": {
                    "description": "Error codes.  Matches the definition of HTTP status codes.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "id": "RepositoryError",
            "description": "Errors when the connector is communicating to the source repository.",
            "type": "object"
        },
        "Principal": {
            "description": "Reference to a user, group, or domain.",
            "type": "object",
            "properties": {
                "userResourceName": {
                    "description": "This principal is a user identified using an external identity.\nThe name field must specify the user resource name with this format:\nidentitysources/{source_id}/users/{ID}",
                    "type": "string"
                },
                "gsuitePrincipal": {
                    "description": "This principal is a GSuite user, group or domain.",
                    "$ref": "GSuitePrincipal"
                },
                "groupResourceName": {
                    "description": "This principal is a group identified using an external identity.\nThe name field must specify the group resource name with this format:\nidentitysources/{source_id}/groups/{ID}",
                    "type": "string"
                }
            },
            "id": "Principal"
        },
        "ResultDebugInfo": {
            "description": "Debugging information about the result.",
            "type": "object",
            "properties": {
                "formattedDebugInfo": {
                    "description": "General debug info formatted for display.",
                    "type": "string"
                }
            },
            "id": "ResultDebugInfo"
        }
    },
    "protocol": "rest",
    "icons": {
        "x32": "http://www.google.com/images/icons/product/search-32.gif",
        "x16": "http://www.google.com/images/icons/product/search-16.gif"
    }
}